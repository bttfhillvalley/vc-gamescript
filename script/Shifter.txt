:shifterset
thread 'shifter'      
wait 10 
008B: 0@ = $DELOREAN // integer values and handles 
if
   not Car.Wrecked(0@)
else_jump @shifterset
02E3: 1@ = car 0@ speed
3FFB: set_car 0@ component "shiftern" visible 0       //Neutral Gear off
3FFB: set_car 0@ component "shifterr" visible 0      //Reverse Gear off
3FFB: set_car 0@ component "shifter1" visible 0     //1st Gear shifter on
3FFB: set_car 0@ component "shifter2" visible 0    //2nd shifter off
3FFB: set_car 0@ component "shifter3" visible 0   //3rd Gear off
3FFB: set_car 0@ component "shifter4" visible 0  //4th Gear off
3FFB: set_car 0@ component "shifter5" visible 0 //5th Gear off  
if 
    1@ < 5.0
else_jump @ShifterGears
3FFB: set_car 0@ component "shiftern" visible 1
3FFD: rotate_car_part "rpmneedle" angle 0.0 49.0 0.0 car 0@   
jump @shifterset

:ShifterGears
if
  1@ > 46.0 // 5th gear, hah
then
  // This is pretty much y=mx+b
  2@ = 1.971
  3@ = 8.926
  3FFB: set_car 0@ component "shifter5" visible 1
else if
  1@ > 35.0 // 4th gear
then
  2@ = 2.534
  3@ = 10.0
  3FFB: set_car 0@ component "shifter4" visible 1
else if
  1@ > 23.0 // 3rd gear
then
  2@ = 3.326
  3@ = 10.0
  3FFB: set_car 0@ component "shifter3" visible 1
else if
  1@ > 14.0 // 2nd gear
then
  2@ = 4.838
  3@ = 12.636
  3FFB: set_car 0@ component "shifter2" visible 1
else if
 // 1stgear
  2@ = 7.602
  3@ = 18.285
  3FFB: set_car 0@ component "shifter1" visible 1
end
end
end
end

// This gets the angle of the RPM meter
0011: 1@ *= 2@
005B: 1@ += 3@    
3FFD: rotate_car_part "rpmneedle" angle 0.0 1@ 0.0 car 0@
jump @shifterset


