// ==================================================================================================
:HoverConversion
0B10: 7@ = 1@ AND $FLYING_BIT   // Is car flying?
if or
    not 7@ == 0
    $LANDING == 1
else_jump @HoverConversionReturn
3F05: set_car 0@ hover 1

// Show wheel lights only when we're not converting
if or
    00DC:   player $PLAYER_CHAR driving 0@
    3F29:   is_player_in_remote_mode_with_car 0@
then
    if
        $CONVERSION == 0
    then
        3F10: set_car 0@ component "fxthrusterbttf2rbon" visible 1
        3F10: set_car 0@ component "fxthrusterbttf2rfon" visible 1
        3F10: set_car 0@ component "fxthrusterbttf2lbon" visible 1
        3F10: set_car 0@ component "fxthrusterbttf2lfon" visible 1
    end
end

// Thrust
Car.StorePos(0@, 2@, 3@, 4@)
3F02: 7@ = car 0@ engine_state
if and
    4@ < 200.0 // floating-point values
    not 7@ == 0
else_jump @HoverConversionReset

// Configure Two stage boost or not.  For testing.
if
    $STAGE_TWO_BOOST == 1
then
    0084: $BOOST_KEY = $HOVER_ACCEL_KEY
    if and
        00E1: key_pressed 0 6
        80E1: key_pressed 0 $BOOST_KEY
    then
        02E3: 7@ = car 0@ speed
        7@ *= -0.1
        7@ += 11.0
        3F25: apply_forward_force 7@ car 0@
    end
else
    $BOOST_KEY = 6
end

// Vent Boosters
if
    00E1:   key_pressed 0 $BOOST_KEY
else_jump @HoverConversionReset
// Booster
3F10: set_car 0@ component "inner_vents" visible 1

02E3: 7@ = car 0@ speed
7@ *= -0.16
7@ += 20.0
3F25: apply_forward_force 7@ car 0@

// Vent Sounds
// Only play once
if and
    $VSOUND == 0 // not loaded
    $TRAVEL == 0
then
    $VSOUND = 1 // loaded
    040D: unload_wav 2
    03CF: load_wav 'BURG_04' as 2
end

if and
    $VSOUND == 1 // loaded
    $TRAVEL == 0
    03D0:   wav 2 loaded
then
    03D1: play_wav 2
    $VSOUND = 2  // playing
end
jump @HoverConversionReturn

:HoverConversionReset
$VSOUND = 0

:HoverConversionReturn
return

// =============================================================================================================================================

:HoverAnimateModel
// Move struts
// Shocks are at a 45 degree angle so they have a weird movement,  They need to be adjusted in both the X and Z axis.
// 8@ will adjust both X
02F7: 8@ = sinus 45.0 // cosine swapped with sinus
006B: 8@ *= 6@

// 9@ will adjust Z. It is always negative.
0087: 9@ = 8@ // Shock
9@ *= -1.0

// 10@ is for the piston extension
0087: 10@ = 9@ // Piston

// 11@ controls how far the piston extends based on wheel rotation.
0087: 11@ = 7@ // Piston
11@ *= 0.001

// Extend/retract piston
0063: 10@ -= 11@
3F14: move_car_part "strutrb" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "holderrb" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "shockrb" pos 8@ 0.0 9@ car 0@
3F14: move_car_part "shockpistonrb" pos 8@ 0.0 10@ car 0@
3F14: move_car_part "fxwheelrbdummy" pos 6@ 0.0 0.0 car 0@

3F14: move_car_part "strutrf" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "holderrf" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "shockrf" pos 8@ 0.0 9@ car 0@
3F14: move_car_part "shockpistonrf" pos 8@ 0.0 10@ car 0@
3F14: move_car_part "fxwheelrfdummy" pos 6@ 0.0 0.0 car 0@
6@ *= -1.0
8@ *= -1.0
3F14: move_car_part "strutlb" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "holderlb" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "shocklb" pos 8@ 0.0 9@ car 0@
3F14: move_car_part "shockpistonlb" pos 8@ 0.0 10@ car 0@
3F14: move_car_part "fxwheellbdummy" pos 6@ 0.0 0.0 car 0@

3F14: move_car_part "strutlf" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "holderlf" pos 6@ 0.0 0.0 car 0@
3F14: move_car_part "shocklf" pos 8@ 0.0 9@ car 0@
3F14: move_car_part "shockpistonlf" pos 8@ 0.0 10@ car 0@
3F14: move_car_part "fxwheellfdummy" pos 6@ 0.0 0.0 car 0@
6@ *= -1.0

// Rotate wheels
0087: 5@ = 7@ // Piston
3F16: rotate_car_part "holderrf" angle 0.0 5@ 0.0 car 0@
3F16: rotate_car_part "holderrb" angle 0.0 5@ 0.0 car 0@
3F16: rotate_car_part "fxwheelrfdummy" angle 0.0 5@ 0.0 car 0@
3F16: rotate_car_part "fxwheelrbdummy" angle 0.0 5@ 0.0 car 0@
5@ *= -1.0
3F16: rotate_car_part "holderlf" angle 0.0 5@ 0.0 car 0@
3F16: rotate_car_part "holderlb" angle 0.0 5@ 0.0 car 0@
3F16: rotate_car_part "fxwheellfdummy" angle 0.0 5@ 0.0 car 0@
3F16: rotate_car_part "fxwheellbdummy" angle 0.0 5@ 0.0 car 0@
return

:HoverSmoke
// Effects
// Smoke effects on takeoff/landing
02E3: 11@ = car 0@ speed
if and
    11@ < 5.0   // slow speeds only as well
    4@ < 5.0   // Only show smoke close to the ground.
then
    0087: 5@ = 11@ // floating-point values only
    5@ /= 30.0 // floating-point values (never used in VC or GTA 3)
    5@ += 0.8 // floating-point values
    0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 0.75 5@ -0.425
    0437: scatter_particle 33 0.1 at 2@ 3@ 4@ 0 0 -0.1
    0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -0.75 5@ -0.425
    0437: scatter_particle 33 0.1 at 2@ 3@ 4@ 0 0 -0.1
    5@ += -1.4 // floating-point values
    0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 0.625 5@ -0.425
    0437: scatter_particle 33 0.1 at 2@ 3@ 4@ 0 0 -0.1
    0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -0.625 5@ -0.425
    0437: scatter_particle 33 0.1 at 2@ 3@ 4@ 0 0 -0.1
end
return

:HoverAnimate
$CONVERSION = 1
0B10: 15@ = 1@ AND $FLYING_BIT   // Is car flying?
040D: unload_wav 2
if
    15@ == 0
then
    6@ = 0.3 // Wheel retracting
    7@ = 90.0 // Wheel rotating back
    $LANDING = 1
    03CF: load_wav 'BURG_08' as 2
    3F27: set_car 0@ wheel_status 0  // Add tires back.  TODO: Keep track of tire status
else
    create_thread @SetVariation 0@ 1@
    6@ = 0.0 // Wheel extending
    7@ = 0.0 // Wheel rotating out
    03CF: load_wav 'BURG_07' as 2
    3F27: set_car 0@ wheel_status 2 // Remove tires
end
gosub @ThrusterLightsOff
create_thread @PlaySound 2

:HoverAnimateStart
wait 10
if
   $TRAVEL == 0
else_jump @HoverAnimateStart
if
8119:   not car 0@ wrecked
else_jump @HoverAnimateEnd
Car.StorePos(0@, 2@, 3@, 4@)
02CE: 5@ = ground_z 2@ 3@ 4@
0063: 4@ -= 5@ // floating-point values (never used in VC or GTA 3)

// Animate
if
    15@ == 0 // Landing
then
    if
        81F3:   not car 0@ airborne
    then
        $LANDING = 0
    end
    if
        7@ > 0.0
    then
        7@ -= 5.0
    else if
        6@ > 0.0
    then
        6@ -= 0.01
    else
        if or
            00DC:   player $PLAYER_CHAR driving 0@
            3F29:   is_player_in_remote_mode_with_car 0@
        then
            if or
                4@ > 5.0  // If we're really high up, just disable hovering
                81F3:   not car 0@ airborne
            then
                create_thread @SetVariation 0@ 1@
                jump @HoverAnimateEnd
            end
        else
            create_thread @SetVariation 0@ 1@
            jump @HoverAnimateEnd
        end
    end
    end
else  // Flying
    if
        6@ < 0.3
    then
        6@ += 0.01
    else if
        7@ < 90.0
    then
        7@ += 5.0
    else
        create_thread @WheelThrust 0@
        jump @HoverAnimateEnd
    end
    end
end

gosub @HoverAnimateModel
gosub @HoverSmoke
jump @HoverAnimateStart

:HoverAnimateEnd
$CONVERSION = 0
$LANDING = 0
end_thread

// ==================================================================================================
:WheelThrust
wait 0
if and
    8119:   not car 0@ wrecked
    00DC:   player $PLAYER_CHAR driving 0@
jf @WheelThrustEnd
// Limited amount of time to engage wheel thrusters after hover conversion
if
   16@ < 500 // integer values
jf @WheelThrustEnd
if
00E1:   key_pressed 0 16
jf @WheelThrust
16@ = 0 // integer values
040D: unload_wav 2
03CF: load_wav 'BURG_03' as 2
create_thread @PlaySound 2

:WheelThrustCheck
wait 10
// Only thrust for 2 seconds max
if  and
    8119:   not car 0@ wrecked
    00DC:   player $PLAYER_CHAR driving 0@
jf @WheelThrustUnloadSound
if
   16@ < 2000 // integer values
jf @WheelThrustUnloadSound

// Unload if we let go of the gas
if
00E1:   key_pressed 0 16
jf @WheelThrustUnloadSound

// Vent thruster will override the wheel thruster
if
80E1:   not key_pressed 0 6
jf @WheelThrustEnd
3F10: set_car 0@ component "fxthrusterbttf2rbth" visible 1
3F10: set_car 0@ component "fxthrusterbttf2rfth" visible 1
3F10: set_car 0@ component "fxthrusterbttf2lbth" visible 1
3F10: set_car 0@ component "fxthrusterbttf2lfth" visible 1

// Thrusters
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -1.2 -1.339 -1.5
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -1.1 1.414 -1.5
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 1.2 -1.339 -1.5
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 1.1 1.414 -1.5
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175

0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -1.2 -1.339 -1.0
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -1.1 1.414 -1.0
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 1.2 -1.339 -1.0
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 1.1 1.414 -1.0
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175

0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -1.2 -1.339 -0.5
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -1.1 1.414 -0.5
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 1.2 -1.339 -0.5
gosub @TimeAddSpeedOffset

04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 1.1 1.414 -0.5
gosub @TimeAddSpeedOffset
04D5: create_corona_at 2@ 3@ 4@ radius 1.0 type 1 flare 0 RGB 255 225 175
jump @WheelThrustCheck

:WheelThrustUnloadSound
040D: unload_wav 2

:WheelThrustEnd
3F10: set_car 0@ component "fxthrusterbttf2rbth" visible 0
3F10: set_car 0@ component "fxthrusterbttf2rfth" visible 0
3F10: set_car 0@ component "fxthrusterbttf2lbth" visible 0
3F10: set_car 0@ component "fxthrusterbttf2lfth" visible 0
end_thread

// ==================================================================================================

// =============================================================================
// This is the old code.  Until we get the train converted over, we're keeping this for now
:Fly
if
00DC:   player $PLAYER_CHAR driving 0@
else_jump @FlyReturn
if
  $FLY_SWITCH == 1 // integer values
else_jump @FlyReturn
if and
    00DE:   player $PLAYER_CHAR driving_vehicle_type #DELUXO
    13@ < 200000
else_jump @FlyDeloreanHover
jump @FlyDeloreanAnim

:FlyDeloreanHover
if
00DE:   player $PLAYER_CHAR driving_vehicle_type #SPARROW
else_jump @FlyTrain
jump @FlyDeloreanHoverAnim

:FlyTrain
if and
    00DE:   player $PLAYER_CHAR driving_vehicle_type #BUS
    13@ < 200000
else_jump @FlyTrainHover
jump @FlyTrainAnim

:FlyTrainHover
if
00DE:   player $PLAYER_CHAR driving_vehicle_type #MAVERICK
else_jump @FlyReturn
jump @FlyTrainHoverAnim

:FlyDeloreanAnim
10@ = #SPARROW // integer values
$LANDING = 0 // integer values
$MODELANIMATION = #SPARROW // integer values
gosub @FlyDeloreanAnimObjects
040D: unload_wav 2
03CF: load_wav 'BURG_07' as 2
jump @FlyLoadModels

:FlyDeloreanHoverAnim
10@ = #DELUXO // integer values
$LANDING = 1 // integer values
$MODELANIMATION = #SPARROW // integer values
gosub @FlyDeloreanAnimObjects
040D: unload_wav 2
03CF: load_wav 'BURG_08' as 2
jump @FlyLoadModels

:FlyTrainAnim
10@ = #MAVERICK // integer values
040D: unload_wav 2
$LANDING = 0 // integer values
gosub @FlyTrainAnimObjects
03CF: load_wav 'ASS_7' as 2
jump @FlyLoadModels

:FlyTrainHoverAnim
10@ = #BUS // integer values
040D: unload_wav 2
$LANDING = 1 // integer values
gosub @FlyTrainAnimObjects
03CF: load_wav 'ASS_8' as 2
jump @FlyLoadModels

:FlyDeloreanAnimObjects
$LEFTWHEELMODEL = #D_WHEEL1 // integer values
$LEFTSTRUTMODEL = #D_STRUT1 // integer values
$RIGHTWHEELMODEL = #D_WHEEL2 // integer values
$RIGHTSTRUTMODEL = #D_STRUT2 // integer values
$WHEELIN = 0.85 // floating-point values
$WHEELOUT = 1.15 // floating-point values
$WHEELDISTANCE = 0.0 // floating-point values
$WHEELHEIGHT = -0.3 // floating-point values
$HEIGHTOFFSET = -0.75 // floating-point values
return

:FlyTrainAnimObjects
$MODELANIMATION = #MAVERICK // integer values
$LEFTWHEELMODEL = #FJVT_HOVERWHEELS_L // integer values
$LEFTSTRUTMODEL = #FJVT_HOLDER_L // integer values
$RIGHTWHEELMODEL = #FJVT_HOVERWHEELS_R // integer values
$RIGHTSTRUTMODEL = #FJVT_HOLDER_R // integer values
Model.Load(#FJVT_WINGDOOR_L)
Model.Load(#FJVT_WINGDOOR_R)
Model.Load(#JVT_PISTONROD_L)
Model.Load(#JVT_PISTONROD_R)
Model.Load(#FJVT_MIDDLEWING_1_L)
Model.Load(#FJVT_MIDDLEWING_1_R)
Model.Load(#FJVT_MIDDLEWING_2_L)
Model.Load(#FJVT_MIDDLEWING_2_R)
Model.Load(#FJVT_MIDDLEWING_3_L)
Model.Load(#FJVT_MIDDLEWING_3_R)
Model.Load(#FJVT_BACKWING_1)
Model.Load(#FJVT_BACKWING_2)
Model.Load(#FJVT_BACKWING_3)
Model.Load(#FJVT_BACKWING_4)
Model.Load(#FJVT_BACKWING_5)
Model.Load(#FJVT_TOPWING_1_L)
Model.Load(#FJVT_TOPWING_1_R)
Model.Load(#FJVT_TOPWING_2_L)
Model.Load(#FJVT_TOPWING_2_R)
Model.Load(#FJVT_TOPWING_3_L)
Model.Load(#FJVT_TOPWING_3_R)
038B: load_requested_models

:FlyTrainAnimObjectsA
wait 0
if and
   Model.Available(#FJVT_WINGDOOR_L)
   Model.Available(#FJVT_WINGDOOR_R)
   Model.Available(#JVT_PISTONROD_L)
   Model.Available(#JVT_PISTONROD_R)
   Model.Available(#FJVT_MIDDLEWING_1_L)
   Model.Available(#FJVT_MIDDLEWING_1_R)
   Model.Available(#FJVT_MIDDLEWING_2_L)
else_jump @FlyTrainAnimObjectsA

:FlyTrainAnimObjectsB
wait 0
if and
   Model.Available(#FJVT_MIDDLEWING_2_R)
   Model.Available(#FJVT_MIDDLEWING_3_L)
   Model.Available(#FJVT_MIDDLEWING_3_R)
   Model.Available(#FJVT_BACKWING_1)
   Model.Available(#FJVT_BACKWING_2)
   Model.Available(#FJVT_BACKWING_3)
   Model.Available(#FJVT_BACKWING_4)
else_jump @FlyTrainAnimObjectsB

:FlyTrainAnimObjectsC
wait 0
if and
   Model.Available(#FJVT_BACKWING_5)
   Model.Available(#FJVT_TOPWING_1_L)
   Model.Available(#FJVT_TOPWING_1_R)
   Model.Available(#FJVT_TOPWING_2_L)
   Model.Available(#FJVT_TOPWING_2_R)
   Model.Available(#FJVT_TOPWING_3_L)
   Model.Available(#FJVT_TOPWING_3_R)
else_jump @FlyTrainAnimObjectsC
$WHEELIN = 0.77 // floating-point values
$WHEELOUT = 1.112 // floating-point values
$WHEELDISTANCE = 0.0 // floating-point values
$HEIGHTOFFSET = -1.35 // floating-point values
return

:FlyLoadModels
$FLY = 1 // integer values
Model.Load(10@)
Model.Load($LEFTWHEELMODEL)
Model.Load($LEFTSTRUTMODEL)
Model.Load($RIGHTWHEELMODEL)
Model.Load($RIGHTSTRUTMODEL)
Model.Load($MODELANIMATION)
038B: load_requested_models

:FlyLoadVariation
wait 0
if and
   Model.Available(10@)
   Model.Available($MODELANIMATION)
   Model.Available($LEFTWHEELMODEL)
   Model.Available($LEFTSTRUTMODEL)
   Model.Available($RIGHTWHEELMODEL)
   Model.Available($RIGHTSTRUTMODEL)
03D0:   wav 2 loaded
else_jump @FlyLoadVariation
if
  $MODELANIMATION == #MAVERICK // integer values
else_jump @FlyLoadVariationDelorean
0506: vehicle_model 10@ set_next_variation -1 0
jump @FlyStart

:FlyLoadVariationDelorean
0506: vehicle_model 10@ set_next_variation -1 -1

:FlyStart
03D1: play_wav 2
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 100.0
012A: put_player $PLAYER_CHAR at 1@ 2@ 3@ and_remove_from_car
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 -5.0 0.0
Camera.SetPosition(1@, 2@, 3@, 0.0, 0.0, 0.0)
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 $HEIGHTOFFSET
0460: set_camera_pointing_time 0.0 100
Camera.PointAt(1@, 2@, 3@, 1)
4@ = Car.Angle(0@)
02E3: 5@ = car 0@ speed
6@ = Car.Health(0@)
Car.Destroy(0@)
0@ = Car.Create($MODELANIMATION, 1@, 2@, 3@)
Car.Angle(0@) = 4@
04BA: set_car 0@ speed_instantly 5@
Car.Health(0@) = 6@
wait 0
0369: put_player $PLAYER_CHAR in_car 0@
008A: $DELOREAN = 0@ // integer values and handles
Car.SetImmunities($DELOREAN, 0, 0, 0, 1, 1)
053F: set_car $DELOREAN tires_vulnerable 0
Camera.Restore
Camera.SetBehindPlayer
gosub @FlyAnim
if
  10@ == #MAVERICK // integer values
else_jump @FlyStartTrainVariation
008A: $TRAIN = 0@ // integer values and handles
0506: vehicle_model 10@ set_next_variation 1 2
jump @FlyCreateVehicle

:FlyStartTrainVariation
if
  10@ == #BUS // integer values
else_jump @FlyStartDeloreanVariation
008A: $TRAIN = 0@ // integer values and handles
0506: vehicle_model 10@ set_next_variation 1 0
jump @FlyCreateVehicle

:FlyStartDeloreanVariation
0506: vehicle_model 10@ set_next_variation 0 -1

:FlyCreateVehicle
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 100.0
if
00DC:   player $PLAYER_CHAR driving 0@
else_jump @FlyNotDriving
012A: put_player $PLAYER_CHAR at 1@ 2@ 3@ and_remove_from_car
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 -5.0 0.0
Camera.SetPosition(1@, 2@, 3@, 0.0, 0.0, 0.0)
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 $HEIGHTOFFSET
0460: set_camera_pointing_time 0.0 100
Camera.PointAt(1@, 2@, 3@, 1)
4@ = Car.Angle(0@)
02E3: 7@ = car 0@ speed
6@ = Car.Health(0@)
Car.Destroy(0@)
0@ = Car.Create(10@, 1@, 2@, 3@)
Car.Angle(0@) = 4@
04BA: set_car 0@ speed_instantly 7@
Car.Health(0@) = 6@
wait 0
0369: put_player $PLAYER_CHAR in_car 0@
jump @FlyDriving

:FlyNotDriving
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 $HEIGHTOFFSET
4@ = Car.Angle(0@)
02E3: 7@ = car 0@ speed
6@ = Car.Health(0@)
Car.Destroy(0@)
0@ = Car.Create(10@, 1@, 2@, 3@)
Car.Angle(0@) = 4@
04BA: set_car 0@ speed_instantly 7@
Car.Health(0@) = 6@

:FlyDriving
008A: $DELOREAN = 0@ // integer values and handles
Car.SetImmunities($DELOREAN, 0, 0, 0, 1, 1)
053F: set_car $DELOREAN tires_vulnerable 0
create_thread @WheelThrust
if or
   Car.Model(0@) == #BUS
   Car.Model(0@) == #MAVERICK
else_jump @FlyCheckFried
008A: $TRAIN = 0@ // integer values and handles
create_thread @TrainConversion 0@
create_thread @TrainAnim 0@
if
   Car.Model(0@) == #BUS
else_jump @FlyTrainHoverWheels
create_thread @TrainWheel 0@
create_thread @Door 0@
jump @FlyCheckFried

:FlyTrainHoverWheels
create_thread @TrainHoverWheel 0@

:FlyCheckFried
$FLY = 0 // integer values
if
  13@ >= 200000 // integer values
else_jump @FlyUnloadModels
if or
   Car.Model(0@) == #SPARROW
   Car.Model(0@) == #MAVERICK
else_jump @FlyUnloadModels
02D4: car 0@ turn_off_engine

:FlyUnloadModels
Model.Destroy(10@)
Model.Destroy($LEFTWHEELMODEL)
Model.Destroy($LEFTSTRUTMODEL)
Model.Destroy($RIGHTWHEELMODEL)
Model.Destroy($RIGHTSTRUTMODEL)
Model.Destroy(#FJVT_WINGDOOR_L)
Model.Destroy(#FJVT_WINGDOOR_R)
Model.Destroy(#JVT_PISTONROD_L)
Model.Destroy(#JVT_PISTONROD_R)
Model.Destroy(#FJVT_MIDDLEWING_1_L)
Model.Destroy(#FJVT_MIDDLEWING_1_R)
Model.Destroy(#FJVT_MIDDLEWING_2_L)
Model.Destroy(#FJVT_MIDDLEWING_2_R)
Model.Destroy(#FJVT_MIDDLEWING_3_L)
Model.Destroy(#FJVT_MIDDLEWING_3_R)
Model.Destroy(#FJVT_BACKWING_1)
Model.Destroy(#FJVT_BACKWING_2)
Model.Destroy(#FJVT_BACKWING_3)
Model.Destroy(#FJVT_BACKWING_4)
Model.Destroy(#FJVT_BACKWING_5)
Model.Destroy(#FJVT_TOPWING_1_L)
Model.Destroy(#FJVT_TOPWING_1_R)
Model.Destroy(#FJVT_TOPWING_2_L)
Model.Destroy(#FJVT_TOPWING_2_R)
Model.Destroy(#FJVT_TOPWING_3_L)
Model.Destroy(#FJVT_TOPWING_3_R)
Camera.Restore
Camera.SetBehindPlayer
5@ = 0.0 // floating-point values
wait 500

:FlyReturn
return

:Hover
thread 'HOVER'

:HoverStart
wait 10
if
   Player.Defined($PLAYER_CHAR)
jf @HoverStart
if or
00DE:   player $PLAYER_CHAR driving_vehicle_type #COMET
00DE:   player $PLAYER_CHAR driving_vehicle_type #PEREN
00DE:   player $PLAYER_CHAR driving_vehicle_type #CHEETAH
00DE:   player $PLAYER_CHAR driving_vehicle_type #IDAHO
00DE:   player $PLAYER_CHAR driving_vehicle_type #MANANA
00DE:   player $PLAYER_CHAR driving_vehicle_type #MOONBEAM
00DE:   player $PLAYER_CHAR driving_vehicle_type #BLISTAC
jf @HoverStart1
jump @HoverCheck

:HoverStart1
if or
00DE:   player $PLAYER_CHAR driving_vehicle_type #WASHING
00DE:   player $PLAYER_CHAR driving_vehicle_type #KAUFMAN
00DE:   player $PLAYER_CHAR driving_vehicle_type #FBIRANCH
00DE:   player $PLAYER_CHAR driving_vehicle_type #GREENWOO
00DE:   player $PLAYER_CHAR driving_vehicle_type #CADDY
jf @HoverReset

:HoverCheck
03C1: 0@ = player $USJPLAYER_CHAR car_no_save
if
     003A:   $KEY == $KEY_HOVERCONVERSION // C
then
    if
        10@ == 0
    then
        10@ = 1
        3F27: set_car 0@ wheel_status 2
        gosub @EnableHoverWheels
    else if
        10@ == 1
    then
        10@ = 2
        3F27: set_car 0@ wheel_status 0
        gosub @DisableHoverWheels
    end
    end
end

if
    10@ >= 1
else_jump @HoverStart
3F05: set_car 0@ hover 1

// Thrust
Car.StorePos(0@, 2@, 3@, 4@)
3F02: 7@ = car 0@ engine_state
if and
    4@ < 200.0 // floating-point values
    not 7@ == 0
else_jump @HoverConversionReset
if
    00E1: key_pressed 0 6
then
    02E3: 7@ = car 0@ speed
    7@ *= -0.1
    7@ += 11.0
    3F25: apply_forward_force 7@ car 0@
end

if
    10@ == 2 // Landing
then
    02CE: 5@ = ground_z 2@ 3@ 4@
    0063: 4@ -= 5@ // floating-point values (never used in VC or GTA 3)
    if or
        4@ > 5.0  // If we're really high up, just disable hovering
        80DC:   not player $PLAYER_CHAR driving 0@
        81F3:   not car 0@ airborne
    then
        10@ = 0
    end
end

jump @HoverStart

:HoverReset
10@ = 0
jump @HoverStart

:EnableHoverWheels
05DF: write_memory 5864611 size 1 value 3 virtual_protect 1
05DF: write_memory 4664325 size 4 value -27939 virtual_protect 1

05DF: write_memory 5829103 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829107 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829111 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829115 size 1 value 144 virtual_protect 1
05DF: write_memory 5829133 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829137 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829141 size 1 value 144 virtual_protect 1
05DF: write_memory 5829142 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829146 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829150 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829154 size 1 value 144 virtual_protect 1
05DF: write_memory 5829186 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5829190 size 2 value 37008 virtual_protect 1

05DF: write_memory 5830585 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830589 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830593 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830597 size 1 value 144 virtual_protect 1
05DF: write_memory 5830615 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830619 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830623 size 1 value 144 virtual_protect 1
05DF: write_memory 5830624 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830628 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830632 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830636 size 1 value 144 virtual_protect 1
05DF: write_memory 5830671 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5830675 size 2 value 37008 virtual_protect 1

05DF: write_memory 5835285 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835289 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835293 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835297 size 1 value 144 virtual_protect 1
05DF: write_memory 5835315 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835319 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835323 size 1 value 144 virtual_protect 1
05DF: write_memory 5835324 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835328 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835332 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835336 size 1 value 144 virtual_protect 1
05DF: write_memory 5835368 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5835372 size 2 value 37008 virtual_protect 1

05DF: write_memory 5836836 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836840 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836844 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836848 size 1 value 144 virtual_protect 1
05DF: write_memory 5836866 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836870 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836874 size 1 value 144 virtual_protect 1
05DF: write_memory 5836875 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836879 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836883 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836887 size 1 value 144 virtual_protect 1
05DF: write_memory 5836916 size 4 value -1869574000 virtual_protect 1
05DF: write_memory 5836920 size 2 value 37008 virtual_protect 1
return

:DisableHoverWheels
05DF: write_memory 5864611 size 1 value 5 virtual_protect 1
05DF: write_memory 4664325 size 4 value -27675 virtual_protect 1

05DF: write_memory 5829103 size 4 value 193019264 virtual_protect 1
05DF: write_memory 5829107 size 4 value 251658401 virtual_protect 1
05DF: write_memory 5829111 size 4 value 206212 virtual_protect 1
05DF: write_memory 5829115 size 1 value 0 virtual_protect 1
05DF: write_memory 5829133 size 4 value 251788416 virtual_protect 1
05DF: write_memory 5829137 size 4 value 199557 virtual_protect 1
05DF: write_memory 5829141 size 1 value 0 virtual_protect 1
05DF: write_memory 5829142 size 4 value 75414912 virtual_protect 1
05DF: write_memory 5829146 size 4 value 252903424 virtual_protect 1
05DF: write_memory 5829150 size 4 value 196229 virtual_protect 1
05DF: write_memory 5829154 size 1 value 0 virtual_protect 1
05DF: write_memory 5829186 size 4 value 14713871 virtual_protect 1
05DF: write_memory 5829190 size 2 value 0 virtual_protect 1

05DF: write_memory 5830585 size 4 value 193019264 virtual_protect 1
05DF: write_memory 5830589 size 4 value 251658401 virtual_protect 1
05DF: write_memory 5830593 size 4 value 207492 virtual_protect 1
05DF: write_memory 5830597 size 1 value 0 virtual_protect 1
05DF: write_memory 5830615 size 4 value 251788416 virtual_protect 1
05DF: write_memory 5830619 size 4 value 200837 virtual_protect 1
05DF: write_memory 5830623 size 1 value 0 virtual_protect 1
05DF: write_memory 5830624 size 4 value 70172032 virtual_protect 1
05DF: write_memory 5830628 size 4 value 252903424 virtual_protect 1
05DF: write_memory 5830632 size 4 value 197509 virtual_protect 1
05DF: write_memory 5830636 size 1 value 0 virtual_protect 1
05DF: write_memory 5830671 size 4 value 14713871 virtual_protect 1
05DF: write_memory 5830675 size 2 value 0 virtual_protect 1

05DF: write_memory 5835285 size 4 value 193019264 virtual_protect 1
05DF: write_memory 5835289 size 4 value 251658401 virtual_protect 1
05DF: write_memory 5835293 size 4 value 208516 virtual_protect 1
05DF: write_memory 5835297 size 1 value 0 virtual_protect 1
05DF: write_memory 5835315 size 4 value 251788416 virtual_protect 1
05DF: write_memory 5835319 size 4 value 201861 virtual_protect 1
05DF: write_memory 5835323 size 1 value 0 virtual_protect 1
05DF: write_memory 5835324 size 4 value 72793472 virtual_protect 1
05DF: write_memory 5835328 size 4 value 252903424 virtual_protect 1
05DF: write_memory 5835332 size 4 value 198533 virtual_protect 1
05DF: write_memory 5835336 size 1 value 0 virtual_protect 1
05DF: write_memory 5835368 size 4 value 14844943 virtual_protect 1
05DF: write_memory 5835372 size 2 value 0 virtual_protect 1
05DF: write_memory 5836836 size 4 value 193019264 virtual_protect 1
05DF: write_memory 5836840 size 4 value 251658401 virtual_protect 1
05DF: write_memory 5836844 size 4 value 208772 virtual_protect 1
05DF: write_memory 5836848 size 1 value 0 virtual_protect 1

05DF: write_memory 5836866 size 4 value 251788416 virtual_protect 1
05DF: write_memory 5836870 size 4 value 202117 virtual_protect 1
05DF: write_memory 5836874 size 1 value 0 virtual_protect 1
05DF: write_memory 5836875 size 4 value 67550592 virtual_protect 1
05DF: write_memory 5836879 size 4 value 252903424 virtual_protect 1
05DF: write_memory 5836883 size 4 value 198789 virtual_protect 1
05DF: write_memory 5836887 size 1 value 0 virtual_protect 1
05DF: write_memory 5836916 size 4 value 15107087 virtual_protect 1
05DF: write_memory 5836920 size 2 value 0 virtual_protect 1
return

