const
    KEY_HOVERCONVERSION = 67 // C
end
// =============================================================================
// This is the old code.  Until we get the train converted over, we're keeping this for now
/*:Fly
if
00DC:   player $PLAYER_CHAR driving 0@
else_jump @FlyReturn
if
  $FLY_SWITCH == 1 // integer values
else_jump @FlyReturn
if and
    00DE:   player $PLAYER_CHAR driving_vehicle_type #DELUXO
    13@ < 200000
else_jump @FlyDeloreanHover
jump @FlyDeloreanAnim

:FlyDeloreanHover
if
00DE:   player $PLAYER_CHAR driving_vehicle_type #SPARROW
else_jump @FlyTrain
jump @FlyDeloreanHoverAnim

:FlyTrain
if and
    00DE:   player $PLAYER_CHAR driving_vehicle_type #BUS
    13@ < 200000
else_jump @FlyTrainHover
jump @FlyTrainAnim

:FlyTrainHover
if
00DE:   player $PLAYER_CHAR driving_vehicle_type #MAVERICK
else_jump @FlyReturn
jump @FlyTrainHoverAnim

:FlyDeloreanAnim
10@ = #SPARROW // integer values
$LANDING = 0 // integer values
$MODELANIMATION = #SPARROW // integer values
gosub @FlyDeloreanAnimObjects
040D: unload_wav 2
03CF: load_wav 'BURG_07' as 2
jump @FlyLoadModels

:FlyDeloreanHoverAnim
10@ = #DELUXO // integer values
$LANDING = 1 // integer values
$MODELANIMATION = #SPARROW // integer values
gosub @FlyDeloreanAnimObjects
040D: unload_wav 2
03CF: load_wav 'BURG_08' as 2
jump @FlyLoadModels

:FlyTrainAnim
10@ = #MAVERICK // integer values
040D: unload_wav 2
$LANDING = 0 // integer values
gosub @FlyTrainAnimObjects
03CF: load_wav 'ASS_7' as 2
jump @FlyLoadModels

:FlyTrainHoverAnim
10@ = #BUS // integer values
040D: unload_wav 2
$LANDING = 1 // integer values
gosub @FlyTrainAnimObjects
03CF: load_wav 'ASS_8' as 2
jump @FlyLoadModels

:FlyDeloreanAnimObjects
$LEFTWHEELMODEL = #D_WHEEL1 // integer values
$LEFTSTRUTMODEL = #D_STRUT1 // integer values
$RIGHTWHEELMODEL = #D_WHEEL2 // integer values
$RIGHTSTRUTMODEL = #D_STRUT2 // integer values
$WHEELIN = 0.85 // floating-point values
$WHEELOUT = 1.15 // floating-point values
$WHEELDISTANCE = 0.0 // floating-point values
$WHEELHEIGHT = -0.3 // floating-point values
$HEIGHTOFFSET = -0.75 // floating-point values
return

:FlyTrainAnimObjects
$MODELANIMATION = #MAVERICK // integer values
$LEFTWHEELMODEL = #FJVT_HOVERWHEELS_L // integer values
$LEFTSTRUTMODEL = #FJVT_HOLDER_L // integer values
$RIGHTWHEELMODEL = #FJVT_HOVERWHEELS_R // integer values
$RIGHTSTRUTMODEL = #FJVT_HOLDER_R // integer values
Model.Load(#FJVT_WINGDOOR_L)
Model.Load(#FJVT_WINGDOOR_R)
Model.Load(#JVT_PISTONROD_L)
Model.Load(#JVT_PISTONROD_R)
Model.Load(#FJVT_MIDDLEWING_1_L)
Model.Load(#FJVT_MIDDLEWING_1_R)
Model.Load(#FJVT_MIDDLEWING_2_L)
Model.Load(#FJVT_MIDDLEWING_2_R)
Model.Load(#FJVT_MIDDLEWING_3_L)
Model.Load(#FJVT_MIDDLEWING_3_R)
Model.Load(#FJVT_BACKWING_1)
Model.Load(#FJVT_BACKWING_2)
Model.Load(#FJVT_BACKWING_3)
Model.Load(#FJVT_BACKWING_4)
Model.Load(#FJVT_BACKWING_5)
Model.Load(#FJVT_TOPWING_1_L)
Model.Load(#FJVT_TOPWING_1_R)
Model.Load(#FJVT_TOPWING_2_L)
Model.Load(#FJVT_TOPWING_2_R)
Model.Load(#FJVT_TOPWING_3_L)
Model.Load(#FJVT_TOPWING_3_R)
038B: load_requested_models

:FlyTrainAnimObjectsA
wait 0
if and
   Model.Available(#FJVT_WINGDOOR_L)
   Model.Available(#FJVT_WINGDOOR_R)
   Model.Available(#JVT_PISTONROD_L)
   Model.Available(#JVT_PISTONROD_R)
   Model.Available(#FJVT_MIDDLEWING_1_L)
   Model.Available(#FJVT_MIDDLEWING_1_R)
   Model.Available(#FJVT_MIDDLEWING_2_L)
else_jump @FlyTrainAnimObjectsA

:FlyTrainAnimObjectsB
wait 0
if and
   Model.Available(#FJVT_MIDDLEWING_2_R)
   Model.Available(#FJVT_MIDDLEWING_3_L)
   Model.Available(#FJVT_MIDDLEWING_3_R)
   Model.Available(#FJVT_BACKWING_1)
   Model.Available(#FJVT_BACKWING_2)
   Model.Available(#FJVT_BACKWING_3)
   Model.Available(#FJVT_BACKWING_4)
else_jump @FlyTrainAnimObjectsB

:FlyTrainAnimObjectsC
wait 0
if and
   Model.Available(#FJVT_BACKWING_5)
   Model.Available(#FJVT_TOPWING_1_L)
   Model.Available(#FJVT_TOPWING_1_R)
   Model.Available(#FJVT_TOPWING_2_L)
   Model.Available(#FJVT_TOPWING_2_R)
   Model.Available(#FJVT_TOPWING_3_L)
   Model.Available(#FJVT_TOPWING_3_R)
else_jump @FlyTrainAnimObjectsC
$WHEELIN = 0.77 // floating-point values
$WHEELOUT = 1.112 // floating-point values
$WHEELDISTANCE = 0.0 // floating-point values
$HEIGHTOFFSET = -1.35 // floating-point values
return

:FlyLoadModels
$FLY = 1 // integer values
Model.Load(10@)
Model.Load($LEFTWHEELMODEL)
Model.Load($LEFTSTRUTMODEL)
Model.Load($RIGHTWHEELMODEL)
Model.Load($RIGHTSTRUTMODEL)
Model.Load($MODELANIMATION)
038B: load_requested_models

:FlyLoadVariation
wait 0
if and
   Model.Available(10@)
   Model.Available($MODELANIMATION)
   Model.Available($LEFTWHEELMODEL)
   Model.Available($LEFTSTRUTMODEL)
   Model.Available($RIGHTWHEELMODEL)
   Model.Available($RIGHTSTRUTMODEL)
03D0:   wav 2 loaded
else_jump @FlyLoadVariation
if
  $MODELANIMATION == #MAVERICK // integer values
else_jump @FlyLoadVariationDelorean
0506: vehicle_model 10@ set_next_variation -1 0
jump @FlyStart

:FlyLoadVariationDelorean
0506: vehicle_model 10@ set_next_variation -1 -1

:FlyStart
03D1: play_wav 2
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 100.0
012A: put_player $PLAYER_CHAR at 1@ 2@ 3@ and_remove_from_car
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 -5.0 0.0
Camera.SetPosition(1@, 2@, 3@, 0.0, 0.0, 0.0)
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 $HEIGHTOFFSET
0460: set_camera_pointing_time 0.0 100
Camera.PointAt(1@, 2@, 3@, 1)
4@ = Car.Angle(0@)
02E3: 5@ = car 0@ speed
6@ = Car.Health(0@)
Car.Destroy(0@)
0@ = Car.Create($MODELANIMATION, 1@, 2@, 3@)
Car.Angle(0@) = 4@
04BA: set_car 0@ speed_instantly 5@
Car.Health(0@) = 6@
wait 0
0369: put_player $PLAYER_CHAR in_car 0@
008A: $DELOREAN = 0@ // integer values and handles
Car.SetImmunities($DELOREAN, 0, 0, 0, 1, 1)
053F: set_car $DELOREAN tires_vulnerable 0
Camera.Restore
Camera.SetBehindPlayer
gosub @FlyAnim
if
  10@ == #MAVERICK // integer values
else_jump @FlyStartTrainVariation
008A: $TRAIN = 0@ // integer values and handles
0506: vehicle_model 10@ set_next_variation 1 2
jump @FlyCreateVehicle

:FlyStartTrainVariation
if
  10@ == #BUS // integer values
else_jump @FlyStartDeloreanVariation
008A: $TRAIN = 0@ // integer values and handles
0506: vehicle_model 10@ set_next_variation 1 0
jump @FlyCreateVehicle

:FlyStartDeloreanVariation
0506: vehicle_model 10@ set_next_variation 0 -1

:FlyCreateVehicle
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 100.0
if
00DC:   player $PLAYER_CHAR driving 0@
else_jump @FlyNotDriving
012A: put_player $PLAYER_CHAR at 1@ 2@ 3@ and_remove_from_car
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 -5.0 0.0
Camera.SetPosition(1@, 2@, 3@, 0.0, 0.0, 0.0)
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 $HEIGHTOFFSET
0460: set_camera_pointing_time 0.0 100
Camera.PointAt(1@, 2@, 3@, 1)
4@ = Car.Angle(0@)
02E3: 7@ = car 0@ speed
6@ = Car.Health(0@)
Car.Destroy(0@)
0@ = Car.Create(10@, 1@, 2@, 3@)
Car.Angle(0@) = 4@
04BA: set_car 0@ speed_instantly 7@
Car.Health(0@) = 6@
wait 0
0369: put_player $PLAYER_CHAR in_car 0@
jump @FlyDriving

:FlyNotDriving
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 $HEIGHTOFFSET
4@ = Car.Angle(0@)
02E3: 7@ = car 0@ speed
6@ = Car.Health(0@)
Car.Destroy(0@)
0@ = Car.Create(10@, 1@, 2@, 3@)
Car.Angle(0@) = 4@
04BA: set_car 0@ speed_instantly 7@
Car.Health(0@) = 6@

:FlyDriving
008A: $DELOREAN = 0@ // integer values and handles
Car.SetImmunities($DELOREAN, 0, 0, 0, 1, 1)
053F: set_car $DELOREAN tires_vulnerable 0
create_thread @WheelThrust
if or
   Car.Model(0@) == #BUS
   Car.Model(0@) == #MAVERICK
else_jump @FlyCheckFried
008A: $TRAIN = 0@ // integer values and handles
create_thread @TrainConversion 0@
create_thread @TrainAnim 0@
if
   Car.Model(0@) == #BUS
else_jump @FlyTrainHoverWheels
create_thread @TrainWheel 0@
create_thread @Door 0@
jump @FlyCheckFried

:FlyTrainHoverWheels
create_thread @TrainHoverWheel 0@

:FlyCheckFried
$FLY = 0 // integer values
if
  13@ >= 200000 // integer values
else_jump @FlyUnloadModels
if or
   Car.Model(0@) == #SPARROW
   Car.Model(0@) == #MAVERICK
else_jump @FlyUnloadModels
02D4: car 0@ turn_off_engine

:FlyUnloadModels
Model.Destroy(10@)
Model.Destroy($LEFTWHEELMODEL)
Model.Destroy($LEFTSTRUTMODEL)
Model.Destroy($RIGHTWHEELMODEL)
Model.Destroy($RIGHTSTRUTMODEL)
Model.Destroy(#FJVT_WINGDOOR_L)
Model.Destroy(#FJVT_WINGDOOR_R)
Model.Destroy(#JVT_PISTONROD_L)
Model.Destroy(#JVT_PISTONROD_R)
Model.Destroy(#FJVT_MIDDLEWING_1_L)
Model.Destroy(#FJVT_MIDDLEWING_1_R)
Model.Destroy(#FJVT_MIDDLEWING_2_L)
Model.Destroy(#FJVT_MIDDLEWING_2_R)
Model.Destroy(#FJVT_MIDDLEWING_3_L)
Model.Destroy(#FJVT_MIDDLEWING_3_R)
Model.Destroy(#FJVT_BACKWING_1)
Model.Destroy(#FJVT_BACKWING_2)
Model.Destroy(#FJVT_BACKWING_3)
Model.Destroy(#FJVT_BACKWING_4)
Model.Destroy(#FJVT_BACKWING_5)
Model.Destroy(#FJVT_TOPWING_1_L)
Model.Destroy(#FJVT_TOPWING_1_R)
Model.Destroy(#FJVT_TOPWING_2_L)
Model.Destroy(#FJVT_TOPWING_2_R)
Model.Destroy(#FJVT_TOPWING_3_L)
Model.Destroy(#FJVT_TOPWING_3_R)
Camera.Restore
Camera.SetBehindPlayer
5@ = 0.0 // floating-point values
wait 500

:FlyReturn
return*/

:Hover
thread 'HOVER'

:HoverStart
wait 10
if
   Player.Defined($PLAYER_CHAR)
jf @HoverStart
if or
00DE:   player $PLAYER_CHAR driving_vehicle_type #COMET
00DE:   player $PLAYER_CHAR driving_vehicle_type #PEREN
00DE:   player $PLAYER_CHAR driving_vehicle_type #CHEETAH
00DE:   player $PLAYER_CHAR driving_vehicle_type #IDAHO
00DE:   player $PLAYER_CHAR driving_vehicle_type #MANANA
00DE:   player $PLAYER_CHAR driving_vehicle_type #MOONBEAM
00DE:   player $PLAYER_CHAR driving_vehicle_type #BLISTAC
jf @HoverStart1
jump @HoverCheck

:HoverStart1
if or
00DE:   player $PLAYER_CHAR driving_vehicle_type #WASHING
00DE:   player $PLAYER_CHAR driving_vehicle_type #KAUFMAN
00DE:   player $PLAYER_CHAR driving_vehicle_type #FBIRANCH
00DE:   player $PLAYER_CHAR driving_vehicle_type #GREENWOO
00DE:   player $PLAYER_CHAR driving_vehicle_type #CADDY
jf @HoverReset

:HoverCheck
03C1: 0@ = player $PLAYER_CHAR car_no_save
if
    is_key_pressed KEY_HOVERCONVERSION
then
    if
        10@ == 0
    then
        10@ = 1
        3F28: set_car 0@ wheel_status 2
        gosub @EnableHoverWheels
    else if
        10@ == 1
    then
        10@ = 2
        3F28: set_car 0@ wheel_status 0
        gosub @DisableHoverWheels
    end
    end
end

:HoverFly
if
    10@ >= 1
else_jump @HoverStart
3F05: set_car 0@ hover 1

// Thrust
Car.StorePos(0@, 2@, 3@, 4@)
3F02: 7@ = car 0@ engine_state
if
    not 7@ == 0
else_jump @HoverReset
if and
    4@ < 1000.0
    00E1: key_pressed 0 6
then
    02E3: 7@ = car 0@ speed
    7@ *= -0.1
    7@ += 11.0
    3F25: apply_forward_force 7@ car 0@
end

if
    10@ == 2 // Landing
then
    02CE: 5@ = ground_z 2@ 3@ 4@
    0063: 4@ -= 5@ // floating-point values (never used in VC or GTA 3)
    if or
        4@ > 5.0  // If we're really high up, just disable hovering
        80DC:   not player $PLAYER_CHAR driving 0@
        81F3:   not car 0@ airborne
    then
        10@ = 0
    end
end

jump @HoverStart

:HoverReset
10@ = 0
jump @HoverStart

:EnableHoverWheels
0A8C: write_memory 5864611 size 1 value 3 virtual_protect 1
0A8C: write_memory 4664325 size 4 value -27939 virtual_protect 1

0A8C: write_memory 5829103 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829107 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829111 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829115 size 1 value 144 virtual_protect 1
0A8C: write_memory 5829133 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829137 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829141 size 1 value 144 virtual_protect 1
0A8C: write_memory 5829142 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829146 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829150 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829154 size 1 value 144 virtual_protect 1
0A8C: write_memory 5829186 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5829190 size 2 value 37008 virtual_protect 1

0A8C: write_memory 5830585 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830589 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830593 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830597 size 1 value 144 virtual_protect 1
0A8C: write_memory 5830615 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830619 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830623 size 1 value 144 virtual_protect 1
0A8C: write_memory 5830624 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830628 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830632 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830636 size 1 value 144 virtual_protect 1
0A8C: write_memory 5830671 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5830675 size 2 value 37008 virtual_protect 1

0A8C: write_memory 5835285 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835289 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835293 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835297 size 1 value 144 virtual_protect 1
0A8C: write_memory 5835315 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835319 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835323 size 1 value 144 virtual_protect 1
0A8C: write_memory 5835324 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835328 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835332 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835336 size 1 value 144 virtual_protect 1
0A8C: write_memory 5835368 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5835372 size 2 value 37008 virtual_protect 1

0A8C: write_memory 5836836 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836840 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836844 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836848 size 1 value 144 virtual_protect 1
0A8C: write_memory 5836866 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836870 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836874 size 1 value 144 virtual_protect 1
0A8C: write_memory 5836875 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836879 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836883 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836887 size 1 value 144 virtual_protect 1
0A8C: write_memory 5836916 size 4 value -1869574000 virtual_protect 1
0A8C: write_memory 5836920 size 2 value 37008 virtual_protect 1
return

:DisableHoverWheels
0A8C: write_memory 5864611 size 1 value 5 virtual_protect 1
0A8C: write_memory 4664325 size 4 value -27675 virtual_protect 1

0A8C: write_memory 5829103 size 4 value 193019264 virtual_protect 1
0A8C: write_memory 5829107 size 4 value 251658401 virtual_protect 1
0A8C: write_memory 5829111 size 4 value 206212 virtual_protect 1
0A8C: write_memory 5829115 size 1 value 0 virtual_protect 1
0A8C: write_memory 5829133 size 4 value 251788416 virtual_protect 1
0A8C: write_memory 5829137 size 4 value 199557 virtual_protect 1
0A8C: write_memory 5829141 size 1 value 0 virtual_protect 1
0A8C: write_memory 5829142 size 4 value 75414912 virtual_protect 1
0A8C: write_memory 5829146 size 4 value 252903424 virtual_protect 1
0A8C: write_memory 5829150 size 4 value 196229 virtual_protect 1
0A8C: write_memory 5829154 size 1 value 0 virtual_protect 1
0A8C: write_memory 5829186 size 4 value 14713871 virtual_protect 1
0A8C: write_memory 5829190 size 2 value 0 virtual_protect 1

0A8C: write_memory 5830585 size 4 value 193019264 virtual_protect 1
0A8C: write_memory 5830589 size 4 value 251658401 virtual_protect 1
0A8C: write_memory 5830593 size 4 value 207492 virtual_protect 1
0A8C: write_memory 5830597 size 1 value 0 virtual_protect 1
0A8C: write_memory 5830615 size 4 value 251788416 virtual_protect 1
0A8C: write_memory 5830619 size 4 value 200837 virtual_protect 1
0A8C: write_memory 5830623 size 1 value 0 virtual_protect 1
0A8C: write_memory 5830624 size 4 value 70172032 virtual_protect 1
0A8C: write_memory 5830628 size 4 value 252903424 virtual_protect 1
0A8C: write_memory 5830632 size 4 value 197509 virtual_protect 1
0A8C: write_memory 5830636 size 1 value 0 virtual_protect 1
0A8C: write_memory 5830671 size 4 value 14713871 virtual_protect 1
0A8C: write_memory 5830675 size 2 value 0 virtual_protect 1

0A8C: write_memory 5835285 size 4 value 193019264 virtual_protect 1
0A8C: write_memory 5835289 size 4 value 251658401 virtual_protect 1
0A8C: write_memory 5835293 size 4 value 208516 virtual_protect 1
0A8C: write_memory 5835297 size 1 value 0 virtual_protect 1
0A8C: write_memory 5835315 size 4 value 251788416 virtual_protect 1
0A8C: write_memory 5835319 size 4 value 201861 virtual_protect 1
0A8C: write_memory 5835323 size 1 value 0 virtual_protect 1
0A8C: write_memory 5835324 size 4 value 72793472 virtual_protect 1
0A8C: write_memory 5835328 size 4 value 252903424 virtual_protect 1
0A8C: write_memory 5835332 size 4 value 198533 virtual_protect 1
0A8C: write_memory 5835336 size 1 value 0 virtual_protect 1
0A8C: write_memory 5835368 size 4 value 14844943 virtual_protect 1
0A8C: write_memory 5835372 size 2 value 0 virtual_protect 1
0A8C: write_memory 5836836 size 4 value 193019264 virtual_protect 1
0A8C: write_memory 5836840 size 4 value 251658401 virtual_protect 1
0A8C: write_memory 5836844 size 4 value 208772 virtual_protect 1
0A8C: write_memory 5836848 size 1 value 0 virtual_protect 1

0A8C: write_memory 5836866 size 4 value 251788416 virtual_protect 1
0A8C: write_memory 5836870 size 4 value 202117 virtual_protect 1
0A8C: write_memory 5836874 size 1 value 0 virtual_protect 1
0A8C: write_memory 5836875 size 4 value 67550592 virtual_protect 1
0A8C: write_memory 5836879 size 4 value 252903424 virtual_protect 1
0A8C: write_memory 5836883 size 4 value 198789 virtual_protect 1
0A8C: write_memory 5836887 size 1 value 0 virtual_protect 1
0A8C: write_memory 5836916 size 4 value 15107087 virtual_protect 1
0A8C: write_memory 5836920 size 2 value 0 virtual_protect 1
return

