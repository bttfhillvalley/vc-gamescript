:ObjectAngle
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 0.0
0407: create_coordinate 1@ 2@ 7@ from_car 0@ offset 0.0 5.0 0.0
0063: 7@ -= 3@ // floating-point values (never used in VC or GTA 3)
7@ /= 5.0 // floating-point values (never used in VC or GTA 3)
7@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 3@ = float_to_integer 7@
7@ = -90.1 // floating-point values

:ObjectAngleX
7@ += 0.1 // floating-point values
02F6: 1@ = cosine 7@ // sinus swapped with cosine
1@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 1@ = float_to_integer 1@
if
003B:   1@ == 3@ // integer values (never used VC or GTA 3)
else_jump @ObjectAngleX
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 0.0
0407: create_coordinate 1@ 2@ 8@ from_car 0@ offset -5.0 0.0 0.0
0063: 8@ -= 3@ // floating-point values (never used in VC or GTA 3)
8@ /= 5.0 // floating-point values (never used in VC or GTA 3)
8@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 3@ = float_to_integer 8@
8@ = -90.1 // floating-point values

:ObjectAngleY
8@ += 0.1 // floating-point values
02F6: 1@ = cosine 8@ // sinus swapped with cosine
1@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 1@ = float_to_integer 1@
if
003B:   1@ == 3@ // integer values (never used VC or GTA 3)
else_jump @ObjectAngleY
4@ = Car.Angle(0@)
return

:PlaySound
while 83D0:   not wav 0@ loaded
    wait 0
end
03D1: play_wav 0@
end_thread

:CheckCarWrecked
if
    Car.Wrecked(0@)
then
    end_thread
end
return