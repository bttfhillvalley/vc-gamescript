// ======================================================================================================
// Plays empty chamber sound, as well as having a short cooldown before time travel effects can start appearing again.
:FuelEmpty
$EMPTY_FLASH = 1
$COOLDOWN = 1
wait 5000
// Only play sounds if driving and if its not the train
if
    not Car.Wrecked(0@)
else_jump @FuelEmptyEnd
if and
    00DC:   player $PLAYER_CHAR driving 0@
    not Car.Model(0@) == #BUS
    not Car.Model(0@) == #MAVERICK
else_jump @FuelEmptyEnd

0B10: 15@ = 1@ AND $REAR_BIT  // Get car variation
if
    15@ == 0  // Play warning sound only for plutonium variant
then
    3F84: play_sound "klaxon.wav" loop 0
end

for 1@ = 0 to 3 step 1
  $EMPTY_FLASH = 0
  wait 400
  $EMPTY_FLASH = 1
  wait 400
end

:FuelEmptyEnd
$EMPTY_FLASH = 0
wait 1000
$COOLDOWN = 0
end_thread

// ======================================================================================================
// Controls the empty light, as well as refueling
:Fuel
if
00DC:   player $PLAYER_CHAR driving 0@
jf @FuelCreateCoordinates
if
    $EMPTY_FLASH == 0
then
    if
        $TIME_DISP == 1
    then
        05F5: call_scm_func @DrawTexture params_count 9 2 825.0 155.0 38.0 23.0 255 255 255 255
    end
    3F10: set_car 0@ component "pchamberemptylight" visible 1
else
    if
        $TIME_DISP == 1
    then
        05F5: call_scm_func @DrawTexture params_count 9 2 825.0 155.0 38.0 23.0 64 64 64 255
    end
    3F10: set_car 0@ component "pchamberemptylight" visible 0
end

// Randomly turn off the Plutonium powered car if its empty
0B10: 7@ = 1@ AND $REAR_BIT  // Get fuel sorce
if
    7@ == 0  // Plutonium variation
then
    0209: 7@ = random_int_in_ranges 1 10000
    if
        7@ == 5000
    then
        $ENGINE_TURNOVER = 1  // Make it harder to turn on the engine
        02D4: car 0@ turn_off_engine
    end
end
jump @FuelReturn

:FuelCreateCoordinates
if
    $FUELING_CONTROL == 1 // integer values
jf @FuelReturn
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset 0.0 -3.25 0.0

:FuelCheckAtCoordinates
if or
80E1:   not key_pressed 0 4
80F6:   not player $PLAYER_CHAR 0 2@ 3@ 4@ radius 0.75 0.75 2.0
jf @FuelCheckBTTF1
jump @FuelReturn

:FuelCheckBTTF1
0B10: 7@ = 1@ AND $REAR_BIT  // Get fuel sorce
if
   7@ == 0  // Plutonium variation
jf @FuelRefuel
if
   not 0 >= $PLUTONIUM // integer values
jf @Plutonium

:FuelRefuel
wait 0
5@ = Car.Angle(0@)
01B4: set_player $PLAYER_CHAR can_move 0
0171: set_player $PLAYER_CHAR z_angle_to 5@
$FUELING = 1 // integer values
008A: $DELOREAN = 0@ // integer values and handles
if
   7@ == 0  // Plutonium variation
then
    3F96: $IGNORE = attach_sound "nuclear_refuel.wav" to_car 0@ offset 0 -2.0 0 loop 0 min 5.0
else
    3F96: $IGNORE = attach_sound "fusion_open.wav" to_car 0@ offset 0 -2.0 0 loop 0 min 5.0
end

if
   7@ == 0
jf @FuelRefuelOpenFusion

// Plutonium refueling
//preplace canister on vent
3F14: move_car_part "plutcaninterior" pos -0.4 -0.0 -0.02 car 0@
3F14: move_car_part "plutcanliquid" pos -0.4 -0.0 -0.02 car 0@
3F14: move_car_part "plutcan" pos -0.4 -0.0 -0.02 car 0@
3F14: move_car_part "plut" pos -0.4 -0.0 -0.02 car 0@
3F16: rotate_car_part "plutcaninterior" angle 0.0 0.0 -90.0 car 0@
3F16: rotate_car_part "plutcanliquid" angle 0.0 0.0 -90.0 car 0@
3F16: rotate_car_part "plutcan" angle 0.0 0.0 -90.0 car 0@
3F16: rotate_car_part "plut" angle 0.0 0.0 -90.0 car 0@
//show can
3F10: set_car 0@ component "plutcan" visible 1
3F10: set_car 0@ component "plutcanliquid" visible 1
3F10: set_car 0@ component "plutcaninterior" visible 1
3F10: set_car 0@ component "plut" visible 1

//open cap
for 4@ = 0.0 to 90.0 step 5.0
    3F16: rotate_car_part "reactorlidbttf1" angle 0.0 0.0 4@ car 0@
    wait 10
end
//set cap on vent
for 4@ = 0.0 to 0.05 step 0.01
    3F14: move_car_part "reactorlidbttf1" pos 0.0 0.0 4@ car 0@
    wait 10
end
for 2@ = 0.0 downto -0.4 step 0.05
  0087: 3@ = 2@
  3@ *= 0.35
  3F14: move_car_part "reactorlidbttf1" pos 2@ 3@ 0.05 car 0@
  wait 10
end
wait 250
04F7: status_text $PLUTONIUM 0 line 2 'PLUTO'  // Plutonium:
//set canister in reactor
for 4@ = 0.41 downto -0.01 step 0.01
    3F14: move_car_part "plutcaninterior" pos 0.0 0.0 4@ car 0@
    3F14: move_car_part "plutcanliquid" pos 0.0 0.0 4@ car 0@
    3F14: move_car_part "plutcan" pos 0.0 0.0 4@ car 0@
    3F14: move_car_part "plut" pos 0.0 0.0 4@ car 0@
    wait 10
end
//turn canister
for 4@ = -90.0 to 0.0 step 1.0
    3F16: rotate_car_part "plutcaninterior" angle 0.0 0.0 4@ car 0@
    3F16: rotate_car_part "plutcanliquid" angle 0.0 0.0 4@ car 0@
    3F16: rotate_car_part "plutcan" angle 0.0 0.0 4@ car 0@
    3F16: rotate_car_part "plut" angle 0.0 0.0 4@ car 0@
    wait 10
end

//drop pellet
for 4@ = -0.01 downto -0.3 step 0.1
    3F14: move_car_part "plut" pos 0.0 0.0 4@ car 0@
    wait 10
end
$PLUTONIUM -= 1 // integer values
3F10: set_car 0@ component "plut" visible 0
wait 500
//set canister back on vent
3F14: move_car_part "plutcanliquid" pos -0.4 -0.0 -0.02 car 0@
3F14: move_car_part "plutcan" pos -0.4 -0.0 -0.02 car 0@
3F14: move_car_part "plutcaninterior" pos -0.4 -0.0 -0.02 car 0@
3F14: move_car_part "plut" pos -0.4 -0.0 -0.02 car 0@
wait 500
//place lid back on reactor
for 2@ = -0.4 to 0.0 step 0.05
    0087: 3@ = 2@
    3@ *= 0.35
    3F14: move_car_part "reactorlidbttf1" pos 2@ 3@ 0.05 car 0@
    wait 10
end
3F14: move_car_part "reactorlidbttf1" pos 0.0 0.0 0.05 car 0@
wait 500
for 4@ = 0.05 downto 0.0 step 0.01
    3F14: move_car_part "reactorlidbttf1" pos 0.0 0.0 4@ car 0@
    wait 10
end
// Close cap
for 4@ = 90.0 downto 0.0 step 5.0
    3F16: rotate_car_part "reactorlidbttf1" angle 0.0 0.0 4@ car 0@
    wait 10
end
wait 1000
{hide canister and set default height and rotation}
3F10: set_car 0@ component "plutcan" visible 0
3F10: set_car 0@ component "plutcanliquid" visible 0
3F10: set_car 0@ component "plutcaninterior" visible 0
3F14: move_car_part "plutcaninterior" pos 0.0 0.0 0.4 car 0@
3F14: move_car_part "plutcanliquid" pos 0.0 0.0 0.4 car 0@
3F14: move_car_part "plutcan" pos 0.0 0.0 0.4 car 0@
3F14: move_car_part "plut" pos 0.0 0.0 0.4 car 0@
3F16: rotate_car_part "plutcaninterior" angle 0.0 0.0 4.0 car 0@
3F16: rotate_car_part "plutcanliquid" angle 0.0 0.0 4.0 car 0@
3F16: rotate_car_part "plutcan" angle 0.0 0.0 4.0 car 0@
3F16: rotate_car_part "plut" angle 0.0 0.0 4.0 car 0@
jump @FuelDoneRefueling


// Leaving this for now, but disabling all animations until we actually get a real one since its real jank to respawn.
:FuelRefuelOpenFusion
// Unlatch
for 5@ = 0.0 to 45.0 step 5.0
    3F16: rotate_car_part "fusionlatch" angle 5@ 0.0 0.0 car 0@
    wait 10
end

// Open Mr. Fusion
gosub @FuelRefuelFusionSmoke
for 5@ = 0.0 downto -90.0 step 6.0
    3F16: rotate_car_part "fusion" angle 5@ 0.0 0.0 car 0@
    wait 10
end

for 5@ = 0 to 10 step 1
    gosub @FuelRefuelFusionSmoke
    wait 50
end

// Play Trash sound
gosub @FuelRefuelTrash


for 5@ = 0 to 40 step 1
    gosub @FuelRefuelFusionSmoke
    wait 50
end

// Close Mr. Fusion
3F96: $IGNORE = attach_sound "fusion_close.wav" to_car 0@ offset 0 -2.0 0 loop 0 min 5.0
for 5@ = -90.0 to 0.0 step 9.0
    3F16: rotate_car_part "fusion" angle 5@ 0.0 0.0 car 0@
    wait 10
end

// Unlatch
for 5@ = 45.0 downTo 0.0 step 5.0
    3F16: rotate_car_part "fusionlatch" angle 5@ 0.0 0.0 car 0@
    wait 10
end
jump @FuelDoneRefueling

:FuelRefuelFusionSmoke
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -0.0 -1.69 0.6
0437: scatter_particle 70 0.01 at 2@ 3@ 4@ 0 0 0
0407: create_coordinate 2@ 3@ 4@ from_car 0@ offset -0.0 -1.69 -1.6
0437: scatter_particle 33 0.01 at 2@ 3@ 4@ 0 0 0
return

:FuelRefuelTrash
0209: 7@ = random_int_in_ranges 0 3
if
    7@ == 0
then
    3F96: $IGNORE = attach_sound "fusion_trash1.wav" to_car 0@ offset 0 -2.0 0 loop 0 min 5.0
else if
    7@ == 1
then
    3F96: $IGNORE = attach_sound "fusion_trash2.wav" to_car 0@ offset 0 -2.0 0 loop 0 min 5.0
else
    3F96: $IGNORE = attach_sound "fusion_trash3.wav" to_car 0@ offset 0 -2.0 0 loop 0 min 5.0
end
end
return

:FuelDoneRefueling
3F10: set_car 0@ component "pchamberemptylight" visible 0
3F16: rotate_car_part "pchamberneedle" angle 0.0 60.0 0.0 car 0@
gosub @LocalToGlobal
wait 500
01B4: set_player $PLAYER_CHAR can_move 1
wait 500
0151: remove_status_text $PLUTONIUM
0B11: 1@ = 1@ OR $FUEL_BIT
$FUELING = 0 // integer values
jump @FuelReturn

// No plutonium?  Lets mark it on the map
:Plutonium
if
  $MCOUNT == 0 // integer values
jf @PlutoniumRadar
$MCOUNT = 1 // integer values
02A8: $LOC1 = create_marker 31 at -1300.5 173.85 11.45

:PlutoniumRadar
03E7: flash_hud 8
00BC: text_highpriority 'GETMORE' 3000 ms 1  // Get More Plutonium
04F7: status_text $PLUTONIUM 0 line 2 'PLUTO'  // Plutonium:
wait 3000
03E7: flash_hud -1
0151: remove_status_text $PLUTONIUM
jump @FuelReturn

:FuelReturn
return

:PlutoniumGaugeOn
0B10: 5@ = 1@ AND $FUEL_BIT
if
    5@ == 0
then
    end_thread
end
while 16@ < 2000
    wait 10
    if
        $TCON == 0
    then
        end_thread
    end
end
3F84: play_sound "plut_gauge.wav" loop 0

// Eventually this will be part of Ilufir's animation handler so we don't have to code it here.
for 2@ = 0.0 to 90.0 step 2.0
    wait 10
    0087: 3@ = 2@
    3@ /= 2.0
    if
        3@ < 10.0
    then
        3@ = 10.0
    end
    0087: 4@ = 2@
    4@ /= 3.0
    if
        4@ >= 22.5
    then
        4@ = 22.5
    end
    3F16: rotate_car_part "pchamberneedle" angle 0.0 3@ 0.0 car 0@
    3F16: rotate_car_part "ppowerneedle" angle 0.0 4@ 0.0 car 0@
    3F16: rotate_car_part "primaryneedle" angle 0.0 4@ 0.0 car 0@
end
end_thread

:PlutoniumGaugeOff
0B10: 5@ = 1@ AND $FUEL_BIT
if
    5@ == 0
then
    end_thread
end
for 2@ = 90.0 downto 0.0 step 2.0
    wait 10
    0087: 3@ = 2@
    3@ /= 2.0
    if
        3@ < 10.0
    then
        3@ = 10.0
    end
    0087: 4@ = 2@
    4@ /= 3.0
    if
        4@ >= 22.5
    then
        4@ = 22.5
    end
    3F16: rotate_car_part "pchamberneedle" angle 0.0 3@ 0.0 car 0@
    3F16: rotate_car_part "ppowerneedle" angle 0.0 4@ 0.0 car 0@
    3F16: rotate_car_part "primaryneedle" angle 0.0 4@ 0.0 car 0@
end
end_thread
