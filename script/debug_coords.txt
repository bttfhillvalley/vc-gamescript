:DebugMove
$DEBUG_X = -323.2219 // X
$DEBUG_Y = -524.6603 // Y
$DEBUG_Z = 12.1778 // Z
$DEBUG_RX = 0.0 // X rotation
$DEBUG_RY = 0.0 // Y rotation
$DEBUG_RZ = 90.0 // Z rotation
$DEBUG_QX = 0.0
$DEBUG_QY = 0.0
$DEBUG_QZ = 0.0      
$DEBUG_QW = 0.0
$DEBUG_SCALE = 0.01 // Scale
$DEBUG_ANGLE_SCALE = 1.0 // Scale
// https://www.asciitable.com/ for changing keycodes
$DEBUG_LEFT = 75 // X-/K
$DEBUG_RIGHT = 59 // X+/;
$DEBUG_BACK = 76 // Y-/L
$DEBUG_FORWARD = 78 // Y+/O 
$DEBUG_UP = 73 // Z-/I
$DEBUG_DOWN = 80 // Z+/P  

$DEBUG_ROLL_LEFT = 71 // RX-/G
$DEBUG_ROLL_RIGHT = 74 // RX+/J
$DEBUG_PITCH_UP = 72 // RY-/H
$DEBUG_PITCH_DOWN = 89 // RY+/Y 
$DEBUG_YAW_LEFT = 84 // RZ-/T
$DEBUG_YAW_RIGHT = 85 // RZ+/U
0107: 0@ = create_object #CELLPHONE at $DEBUG_X $DEBUG_Y $DEBUG_Z 

:DebugLoop
wait 10   
01BC: put_object 0@ at $DEBUG_X $DEBUG_Y $DEBUG_Z
0453: object 0@ set_rotation $DEBUG_RX $DEBUG_RY $DEBUG_RZ

// X-
if
  003A: $KEY == $DEBUG_LEFT
then
  0061: $DEBUG_X -= $DEBUG_SCALE // floating-point values (never used in VC or GTA 3) 
end

// X+
if
  003A: $KEY == $DEBUG_RIGHT
then              
  0059: $DEBUG_X += $DEBUG_SCALE // floating-point values (never used in VC or GTA 3)
end 


// Y-
if
  003A: $KEY == $DEBUG_BACK
then
  0061: $DEBUG_Y -= $DEBUG_SCALE // floating-point values (never used in VC or GTA 3) 
end

// Y+
if
  003A: $KEY == $DEBUG_FORWARD
then
  0059: $DEBUG_Y += $DEBUG_SCALE // floating-point values (never used in VC or GTA 3)
end 


// Z-
if
  003A: $KEY == $DEBUG_UP
then
  0061: $DEBUG_Z -= $DEBUG_SCALE // floating-point values (never used in VC or GTA 3) 
end

// Z+
if
  003A: $KEY == $DEBUG_DOWN
then
  0059: $DEBUG_Z += $DEBUG_SCALE // floating-point values (never used in VC or GTA 3)
end 

// RX-
if
  003A: $KEY == $DEBUG_ROLL_LEFT
then
  0061: $DEBUG_RX -= $DEBUG_ANGLE_SCALE // floating-point values (never used in VC or GTA 3) 
end

// RX+
if
  003A: $KEY == $DEBUG_ROLL_RIGHT
then              
  0059: $DEBUG_RX += $DEBUG_ANGLE_SCALE // floating-point values (never used in VC or GTA 3)
end 


// RY-
if
  003A: $KEY == $DEBUG_PITCH_UP
then
  0061: $DEBUG_RY -= $DEBUG_ANGLE_SCALE // floating-point values (never used in VC or GTA 3) 
end

// RY+
if
  003A: $KEY == $DEBUG_PITCH_DOWN
then
  0059: $DEBUG_RY += $DEBUG_ANGLE_SCALE // floating-point values (never used in VC or GTA 3)
end 


// RZ-
if
  003A: $KEY == $DEBUG_YAW_LEFT
then
  0061: $DEBUG_RZ -= $DEBUG_ANGLE_SCALE // floating-point values (never used in VC or GTA 3) 
end

// RZ+
if
  003A: $KEY == $DEBUG_YAW_RIGHT
then
  0059: $DEBUG_RZ += $DEBUG_ANGLE_SCALE // floating-point values (never used in VC or GTA 3)
end 

gosub @EulerToQuaternion
1@ = 10.0
2@ = 10.0
0087: 15@ = $DEBUG_X
gosub @DrawNumber
2@ = 20.0
0087: 15@ = $DEBUG_Y
gosub @DrawNumber
2@ = 30.0
0087: 15@ = $DEBUG_Z
gosub @DrawNumber 

1@ = 100.0
2@ = 10.0
0087: 15@ = $DEBUG_RX
gosub @DrawNumber
2@ = 20.0
0087: 15@ = $DEBUG_RY
gosub @DrawNumber
2@ = 30.0
0087: 15@ = $DEBUG_RZ
gosub @DrawNumber 

1@ = 200.0
2@ = 10.0
0087: 15@ = $DEBUG_QX
gosub @DrawNumber2
2@ = 20.0
0087: 15@ = $DEBUG_QY
gosub @DrawNumber2
2@ = 30.0
0087: 15@ = $DEBUG_QZ
gosub @DrawNumber2
2@ = 40.0
0087: 15@ = $DEBUG_QW
gosub @DrawNumber2 
jump @DebugLoop

:EulerToQuaternion
// QX
// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine    
0087: 3@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus 
006B: 3@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus 
006B: 3@ *= 2@

// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus  
0087: 4@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
006B: 4@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
006B: 4@ *= 2@

0088: $DEBUG_QX = 3@
0067: $DEBUG_QX -= 4@

// QY
// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus  
0087: 3@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine 
006B: 3@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus 
006B: 3@ *= 2@

// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
0087: 4@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus 
006B: 4@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
006B: 4@ *= 2@

0088: $DEBUG_QY = 3@
005F: $DEBUG_QY += 4@

// QZ
// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus    
0087: 3@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus 
006B: 3@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
006B: 3@ *= 2@

// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine   
0087: 4@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
006B: 4@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus
006B: 4@ *= 2@

0088: $DEBUG_QZ = 3@
0067: $DEBUG_QZ -= 4@

// QW
// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus  
0087: 3@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus 
006B: 3@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F7: 2@ = sinus 1@ // cosine swapped with sinus 
006B: 3@ *= 2@

// ===============================================
0089: 1@ = $DEBUG_RX
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
0087: 4@ = 2@

0089: 1@ = $DEBUG_RY
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
006B: 4@ *= 2@

0089: 1@ = $DEBUG_RZ
1@ /= 2.0
02F6: 2@ = cosine 1@ // sinus swapped with cosine  
006B: 4@ *= 2@

0088: $DEBUG_QW = 3@
005F: $DEBUG_QW += 4@
return

:DrawNumber 
008C: 13@ = float_to_integer 15@
008D: 14@ = integer_to_float 13@
0063: 15@ -= 14@ // float
0013: 15@ *= 100.0
008C: 14@ = float_to_integer 15@    
0095: make 14@ absolute_integer   
if 
    14@ >= 10
then
    045B: text_draw_2numbers 1@ 2@ 'POS1' 13@ 14@  // ~1~.~1~
else
    045B: text_draw_2numbers 1@ 2@ 'POS2' 13@ 14@  // ~1~.0~1~
end        
return

:DrawNumber2 
008C: 13@ = float_to_integer 15@
008D: 14@ = integer_to_float 13@
0063: 15@ -= 14@ // float
0013: 15@ *= 10000.0
008C: 14@ = float_to_integer 15@    
0095: make 14@ absolute_integer   
if 
    14@ >= 1000
then
    045B: text_draw_2numbers 1@ 2@ 'POS1' 13@ 14@  // ~1~.~1~
else  if 
    14@ >= 100
then
    045B: text_draw_2numbers 1@ 2@ 'POS2' 13@ 14@  // ~1~.0~1~
else if 
    14@ >= 10
then
    045B: text_draw_2numbers 1@ 2@ 'POS3' 13@ 14@  // ~1~.00~1~
else
    045B: text_draw_2numbers 1@ 2@ 'POS4' 13@ 14@  // ~1~.000~1~
end   
end     
end
return

  



                                                                                                                                                                                              