:Train
00D7: create_thread @TrainSpawn without_parameters
end_thread

:TrainSpawn
thread 'TRAIN'

:TrainStart
wait 10
if
   Player.Defined($PLAYER_CHAR)
jf @TrainStart
if
    not Car.Wrecked($TRAIN)
then
    04C4: create_coordinate 1@ 2@ 3@ from_actor $PLAYER_ACTOR offset 0.0 0.0 0.0
    0407: create_coordinate 4@ 5@ 6@ from_car $TRAIN offset 0.0 0.0 0.0
    050A: 0@ = distance_between_point 1@ 2@ 3@ and_point 4@ 5@ 6@
    if
        0@ > 100.0
    then
        0519: lock_vehicle $TRAIN in_current_position 1
    else
        0519: lock_vehicle $TRAIN in_current_position 0
    end
end
if and
  $TRAIN_CREATE == 0 // integer values
  $CYEAR >= 1855 // integer values
jf @TrainStart
Model.Load(#BUS)

:TrainCreate
wait 10
if
   Model.Available(#BUS)
jf @TrainCreate
0506: vehicle_model #BUS set_next_variation -1 0
$TRAIN = Car.Create(#BUS, -391.0, -573.0, 40.0)
Car.Angle($TRAIN) = 355.5
Model.Destroy(#BUS)
create_thread @Time $TRAIN 0 0 0 0 0 0 -5000.0 $CTIME $CTIME1 0 0 $CTIME $CTIME1 -1 0
create_thread @TrainConversion $TRAIN
create_thread @TrainAnim $TRAIN
create_thread @TrainWheel $TRAIN
create_thread @Door $TRAIN
$TRAIN_CREATE = 1 // integer values
jump @TrainStart

:TrainConversion
wait 10
$X_OFFSET_TT = 0.0 // floating-point values
$Y_OFFSET_TT = 0.0 // floating-point values
$Z_OFFSET_TT = 0.0 // floating-point values
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 0.0

:TrainConversionStart
wait 10
if
   not Car.Wrecked(0@)
else_jump @TrainConversionEnd
0407: create_coordinate $X_OFFSET_TT $Y_OFFSET_TT $Z_OFFSET_TT from_car 0@ offset 0.0 0.0 0.0
0067: $X_OFFSET_TT -= 1@ // floating-point values
0067: $Y_OFFSET_TT -= 2@ // floating-point values
0067: $Z_OFFSET_TT -= 3@ // floating-point values
005D: 1@ += $X_OFFSET_TT // floating-point values (never used in VC or GTA 3)
005D: 2@ += $Y_OFFSET_TT // floating-point values (never used in VC or GTA 3)
005D: 3@ += $Z_OFFSET_TT // floating-point values (never used in VC or GTA 3)
jump @TrainConversionStart

:TrainConversionEnd
end_thread

:TrainConversionOffset
0407: create_coordinate $X_POS_TT $Y_POS_TT $Z_POS_TT from_car 0@ offset $X_POS_TT $Y_POS_TT $Z_POS_TT
0059: $X_POS_TT += $X_OFFSET_TT // floating-point values
0059: $Y_POS_TT += $Y_OFFSET_TT // floating-point values
0059: $Z_POS_TT += $Z_OFFSET_TT // floating-point values
return
:TrainAnim
thread 'ROTATE'

:TrainAnimBegin
wait 10
if
   not Car.Wrecked(0@)
else_jump @TrainAnimEnd
15@ = 0.0 // floating-point values
$SPIRAL = 0.0 // floating-point values
$LEFTMAGNET = Object.Create(#JVT_MAGNET, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTMAGNET) = False
$RIGHTMAGNET = Object.Create(#JVT_MAGNET, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTMAGNET) = False
$SPIRALMODEL = Object.Create(#JVT_SPIRAL, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($SPIRALMODEL) = False
$UPSPIRAL = Object.Create(#JVT_UPSPIRAL, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($UPSPIRAL) = False
$WINDMETER = Object.Create(#JVT_WINDMETER, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($WINDMETER) = False
$LEFTSIDEHAMMER = Object.Create(#JVT_SIDEHAMMER_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTSIDEHAMMER) = False
$RIGHTSIDEHAMMER = Object.Create(#JVT_SIDEHAMMER_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTSIDEHAMMER) = False
$BELLOWSBOTTOM = Object.Create(#JVT_BELLOWSBOTTOM, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($BELLOWSBOTTOM) = False
$BELLOWSMIDDLE1 = Object.Create(#JVT_BELLOWSMIDDLE1, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($BELLOWSMIDDLE1) = False
$BELLOWSMIDDLE2 = Object.Create(#JVT_BELLOWSMIDDLE2, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($BELLOWSMIDDLE2) = False
$BELLOWSTOP = Object.Create(#JVT_BELLOWSTOP, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($BELLOWSTOP) = False
$TOPGEAR = Object.Create(#JVT_TOPGEAR, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($TOPGEAR) = False
$PIVOT = Object.Create(#JVT_TOPGEAR_PIVOT, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PIVOT) = False
$TOPROD = Object.Create(#JVT_TOPRODBELLOWS, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($TOPROD) = False
$LEFTSIDEAXLE = Object.Create(#JVT_SIDEAXLE_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTSIDEAXLE) = False
$RIGHTSIDEAXLE = Object.Create(#JVT_SIDEAXLE_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTSIDEAXLE) = False
$LEFTSIDECONNECTION = Object.Create(#JVT_SIDECONNECTION, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTSIDECONNECTION) = False
$RIGHTSIDECONNECTION = Object.Create(#JVT_SIDECONNECTION, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTSIDECONNECTION) = False
$LEFTSIDEMOVERCONNECTION = Object.Create(#JVT_SIDEMCONNECTION, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTSIDEMOVERCONNECTION) = False
$RIGHTSIDEMOVERCONNECTION = Object.Create(#JVT_SIDEMCONNECTION, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTSIDEMOVERCONNECTION) = False
$LEFTSIDEPISTONCONNECTION = Object.Create(#JVT_SIDEPCONNECTION, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTSIDEPISTONCONNECTION) = False
$RIGHTSIDEPISTONCONNECTION = Object.Create(#JVT_SIDEPCONNECTION, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTSIDEPISTONCONNECTION) = False
$LEFTSIDEAXLEMOVER = Object.Create(#JVT_SIDEAXLEMOVER_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTSIDEAXLEMOVER) = False
$RIGHTSIDEAXLEMOVER = Object.Create(#JVT_SIDEAXLEMOVER_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTSIDEAXLEMOVER) = False
$LEFTSIDEHORPISTON = Object.Create(#JVT_SIDEHORPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTSIDEHORPISTON) = False
$RIGHTSIDEHORPISTON = Object.Create(#JVT_SIDEHORPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTSIDEHORPISTON) = False
$PISTON1L = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON1L) = False
$PISTON2L = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON2L) = False
$PISTON3L = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON3L) = False
$PISTON4L = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON4L) = False
$PISTON5L = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON5L) = False
$PISTON6L = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON6L) = False
$PISTON1R = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON1R) = False
$PISTON2R = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON2R) = False
$PISTON3R = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON3R) = False
$PISTON4R = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON4R) = False
$PISTON5R = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON5R) = False
$PISTON6R = Object.Create(#JVT_SIDEPISTON, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($PISTON6R) = False
jump @TrainAnimStart

:TrainAnimSetup
wait 10

:TrainAnimStart
if
   not Car.Wrecked(0@)
else_jump @TrainAnimEnd
0088: $Z_ADJUST = 15@ // floating-point values only
gosub @RotateAngle
005B: 4@ += 15@ // floating-point values (never used in VC or GTA 3)
$X_POS_TT = -1.107 // floating-point values
$Y_POS_TT = 1.31 // floating-point values
$Z_POS_TT = 0.235 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTMAGNET at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTMAGNET set_rotation 7@ 8@ 4@
$X_POS_TT = 1.107 // floating-point values
$Y_POS_TT = 1.31 // floating-point values
$Z_POS_TT = 0.235 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTMAGNET at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTMAGNET set_rotation 7@ 8@ 4@
$X_POS_TT = 0.0 // floating-point values
$Y_POS_TT = 4.187 // floating-point values
$Z_POS_TT = 1.459 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $WINDMETER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $WINDMETER set_rotation 7@ 8@ 4@
0063: 4@ -= 15@ // floating-point values (never used in VC or GTA 3)
0086: $Z_ADJUST = $SPIRAL // floating-point values only
gosub @RotateAngle
005D: 4@ += $SPIRAL // floating-point values (never used in VC or GTA 3)
$X_POS_TT = 0.0 // floating-point values
$Y_POS_TT = 1.016 // floating-point values
$Z_POS_TT = 2.758 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $SPIRALMODEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $SPIRALMODEL set_rotation 7@ 8@ 4@
0086: $Z_ADJUST = $SPIRAL // floating-point values only
$Z_ADJUST *= -1.0 // floating-point values
gosub @RotateAngle
0065: 4@ -= $SPIRAL // floating-point values (never used in VC or GTA 3)
$X_POS_TT = 0.0 // floating-point values
$Y_POS_TT = 1.016 // floating-point values
$Z_POS_TT = 2.961 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $UPSPIRAL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $UPSPIRAL set_rotation 7@ 8@ 4@
02F6: $TRIG_ANGLE = cosine 15@ // sinus swapped with cosine
$TRIG_ANGLE *= 11.0 // floating-point values
0086: $Z_ADJUST = $TRIG_ANGLE // floating-point values only
gosub @RotateAngle
005D: 4@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
$X_POS_TT = -0.625 // floating-point values
$Y_POS_TT = -1.284 // floating-point values
$Z_POS_TT = -0.604 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTSIDEHAMMER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTSIDEHAMMER set_rotation 7@ 8@ 4@
$TRIG_ANGLE *= -1.0 // floating-point values
0086: $Z_ADJUST = $TRIG_ANGLE // floating-point values only
gosub @RotateAngle
005D: 4@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
$X_POS_TT = 0.625 // floating-point values
$Y_POS_TT = -1.284 // floating-point values
$Z_POS_TT = -0.604 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTSIDEHAMMER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTSIDEHAMMER set_rotation 7@ 8@ 4@
$Z_ADJUST = 0.0 // floating-point values
gosub @RotateAngle
$X_POS_TT = 0.0 // floating-point values
$Y_POS_TT = 6.105 // floating-point values
$Z_POS_TT = 1.547 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $BELLOWSBOTTOM at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $BELLOWSBOTTOM set_rotation 7@ 8@ 4@
02F6: $TRIG_ANGLE = cosine $SPIRAL // sinus swapped with cosine
$TRIG_ANGLE *= 4.125 // floating-point values
$TRIG_ANGLE += 4.125 // floating-point values
01BC: put_object $BELLOWSMIDDLE1 at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 7@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $BELLOWSMIDDLE1 set_rotation 7@ 8@ 4@
0065: 7@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
02F6: $TRIG_ANGLE = cosine $SPIRAL // sinus swapped with cosine
$TRIG_ANGLE *= 6.1875 // floating-point values
$TRIG_ANGLE += 6.1875 // floating-point values
01BC: put_object $BELLOWSMIDDLE2 at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 7@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $BELLOWSMIDDLE2 set_rotation 7@ 8@ 4@
0065: 7@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
02F6: $TRIG_ANGLE = cosine $SPIRAL // sinus swapped with cosine
$TRIG_ANGLE *= 8.25 // floating-point values
$TRIG_ANGLE += 8.25 // floating-point values
01BC: put_object $BELLOWSTOP at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 7@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $BELLOWSTOP set_rotation 7@ 8@ 4@
0065: 7@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
02F6: $TRIG_ANGLE = cosine $PISTON // sinus swapped with cosine
$TRIG_ANGLE *= 1.25 // floating-point values
$TRIG_ANGLE += -1.262 // floating-point values
02F6: $Y_PISTON = cosine $PISTON // sinus swapped with cosine
$Y_PISTON *= 0.1075 // floating-point values
$Y_PISTON += 5.1205 // floating-point values
02F6: $Z_PISTON = cosine $PISTON // sinus swapped with cosine
$Z_PISTON *= -0.0125 // floating-point values
$Z_PISTON += 0.5995 // floating-point values
$X_POS_TT = -0.704 // floating-point values
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $LEFTSIDEPISTONCONNECTION at $X_POS_TT $Y_POS_TT $Z_POS_TT
$X_POS_TT = 0.704 // floating-point values
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $RIGHTSIDEPISTONCONNECTION at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 7@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $LEFTSIDEPISTONCONNECTION set_rotation 7@ 8@ 4@
0453: object $RIGHTSIDEPISTONCONNECTION set_rotation 7@ 8@ 4@
0065: 7@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
02F6: $TRIG_ANGLE = cosine $PISTON // sinus swapped with cosine
$TRIG_ANGLE *= 10.0 // floating-point values
$TRIG_ANGLE += -5.0 // floating-point values
$X_POS_TT = -0.704 // floating-point values
$Y_POS_TT = 5.193 // floating-point values
$Z_POS_TT = 1.214 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTSIDECONNECTION at $X_POS_TT $Y_POS_TT $Z_POS_TT
$X_POS_TT = 0.704 // floating-point values
$Y_POS_TT = 5.193 // floating-point values
$Z_POS_TT = 1.214 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTSIDECONNECTION at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 7@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $LEFTSIDECONNECTION set_rotation 7@ 8@ 4@
0453: object $RIGHTSIDECONNECTION set_rotation 7@ 8@ 4@
0065: 7@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
02F6: $Y_PISTON = cosine $PISTON // sinus swapped with cosine
$Y_PISTON *= -0.015 // floating-point values
$Y_PISTON += 4.58 // floating-point values
02F6: $Z_PISTON = cosine $PISTON // sinus swapped with cosine
$Z_PISTON *= -0.1075 // floating-point values
$Z_PISTON += 1.2985 // floating-point values
02F6: $TRIG_ANGLE = cosine $PISTON // sinus swapped with cosine
$TRIG_ANGLE *= 4.25 // floating-point values
$TRIG_ANGLE += -2.125 // floating-point values
$X_POS_TT = -0.704 // floating-point values
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $LEFTSIDEMOVERCONNECTION at $X_POS_TT $Y_POS_TT $Z_POS_TT
$X_POS_TT = 0.704 // floating-point values
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $RIGHTSIDEMOVERCONNECTION at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 7@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $LEFTSIDEMOVERCONNECTION set_rotation 7@ 8@ 4@
0453: object $RIGHTSIDEMOVERCONNECTION set_rotation 7@ 8@ 4@
0065: 7@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
02F6: $Z_PISTON = cosine $PISTON // sinus swapped with cosine
$Z_PISTON *= -0.1075 // floating-point values
$Z_PISTON += 1.1505 // floating-point values
$X_POS_TT = -0.684 // floating-point values
$Y_POS_TT = 4.571 // floating-point values
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $LEFTSIDEAXLEMOVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTSIDEAXLEMOVER set_rotation 7@ 8@ 4@
$X_POS_TT = 0.684 // floating-point values
$Y_POS_TT = 4.571 // floating-point values
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $RIGHTSIDEAXLEMOVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTSIDEAXLEMOVER set_rotation 7@ 8@ 4@
02F6: $Y_PISTON = cosine $PISTON // sinus swapped with cosine
$Y_PISTON *= 0.109 // floating-point values
$Y_PISTON += 6.015 // floating-point values
$X_POS_TT = -0.704 // floating-point values
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
$Z_POS_TT = 0.54 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTSIDEHORPISTON at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTSIDEHORPISTON set_rotation 7@ 8@ 4@
$X_POS_TT = 0.704 // floating-point values
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
$Z_POS_TT = 0.54 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTSIDEHORPISTON at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTSIDEHORPISTON set_rotation 7@ 8@ 4@
02F6: $TRIG_ANGLE = cosine $PISTON // sinus swapped with cosine
$TRIG_ANGLE *= 135.0 // floating-point values
$TRIG_ANGLE += 135.0 // floating-point values
$X_POS_TT = -0.747 // floating-point values
$Y_POS_TT = 3.963 // floating-point values
$Z_POS_TT = 0.781 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTSIDEAXLE at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $LEFTSIDEAXLE set_rotation 7@ 8@ 4@
0065: 8@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
$X_POS_TT = 0.747 // floating-point values
$Y_POS_TT = 3.963 // floating-point values
$Z_POS_TT = 0.781 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTSIDEAXLE at $X_POS_TT $Y_POS_TT $Z_POS_TT
0065: 8@ -= $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $RIGHTSIDEAXLE set_rotation 7@ 8@ 4@
005D: 8@ += $TRIG_ANGLE // floating-point values (never used in VC or GTA 3)
$PISTON_ANGLE_OFFSET = -300.0 // floating-point values
$Y_PISTON = 4.335 // floating-point values
gosub @TrainPiston
01BC: put_object $PISTON1L at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON1L set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
gosub @TrainPistonA
01BC: put_object $PISTON1R at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON1R set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
$PISTON_ANGLE_OFFSET = -240.0 // floating-point values
$Y_PISTON = 4.169 // floating-point values
gosub @TrainPiston
01BC: put_object $PISTON2L at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON2L set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
gosub @TrainPistonA
01BC: put_object $PISTON2R at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON2R set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
$PISTON_ANGLE_OFFSET = -180.0 // floating-point values
$Y_PISTON = 4.01 // floating-point values
gosub @TrainPiston
01BC: put_object $PISTON3L at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON3L set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
gosub @TrainPistonA
01BC: put_object $PISTON3R at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON3R set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
$PISTON_ANGLE_OFFSET = -120.0 // floating-point values
$Y_PISTON = 3.769 // floating-point values
gosub @TrainPiston
01BC: put_object $PISTON4L at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON4L set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
gosub @TrainPistonA
01BC: put_object $PISTON4R at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON4R set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
$PISTON_ANGLE_OFFSET = -60.0 // floating-point values
$Y_PISTON = 3.625 // floating-point values
gosub @TrainPiston
01BC: put_object $PISTON5L at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON5L set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
gosub @TrainPistonA
01BC: put_object $PISTON5R at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON5R set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
$PISTON_ANGLE_OFFSET = 0.0 // floating-point values
$Y_PISTON = 3.442 // floating-point values
gosub @TrainPiston
01BC: put_object $PISTON6L at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON6L set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
gosub @TrainPistonA
01BC: put_object $PISTON6R at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 8@ += $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0453: object $PISTON6R set_rotation 7@ 8@ 4@
0065: 8@ -= $PISTON_ROTATION // floating-point values (never used in VC or GTA 3)
0086: $Z_ADJUST = $SPIRAL // floating-point values only
gosub @RotateAngle
005D: 4@ += $SPIRAL // floating-point values (never used in VC or GTA 3)
$X_POS_TT = 0.0 // floating-point values
$Y_POS_TT = 4.485 // floating-point values
$Z_POS_TT = 1.459 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $TOPGEAR at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $TOPGEAR set_rotation 7@ 8@ 4@
$Z_ADJUST = 0.0 // floating-point values
gosub @RotateAngle
02F7: $PIVOT_X = sinus $SPIRAL // cosine swapped with sinus
$PIVOT_X *= 0.196 // floating-point values
02F6: $PIVOT_Y = cosine $SPIRAL // sinus swapped with cosine
$PIVOT_Y *= -0.196 // floating-point values
$PIVOT_Y += 4.485 // floating-point values
0086: $X_POS_TT = $PIVOT_X // floating-point values only
0086: $Y_POS_TT = $PIVOT_Y // floating-point values only
$Z_POS_TT = 1.459 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $PIVOT at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $PIVOT set_rotation 7@ 8@ 4@
02F6: $PIVOT_X_ANGLE = cosine $SPIRAL // sinus swapped with cosine
$PIVOT_X_ANGLE *= -21.0 // floating-point values
$PIVOT_X_ANGLE += -47.8 // floating-point values
02F7: $PIVOT_Y_ANGLE = sinus $SPIRAL // cosine swapped with sinus
$PIVOT_Y_ANGLE *= -20.4 // floating-point values
0086: $X_POS_TT = $PIVOT_X // floating-point values only
0086: $Y_POS_TT = $PIVOT_Y // floating-point values only
$Z_POS_TT = 1.559 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $TOPROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
005D: 7@ += $PIVOT_X_ANGLE // floating-point values (never used in VC or GTA 3)
005D: 8@ += $PIVOT_Y_ANGLE // floating-point values (never used in VC or GTA 3)
0453: object $TOPROD set_rotation 7@ 8@ 4@
0065: 7@ -= $PIVOT_X_ANGLE // floating-point values (never used in VC or GTA 3)
0065: 8@ -= $PIVOT_Y_ANGLE // floating-point values (never used in VC or GTA 3)
if or
00DC:   player $PLAYER_CHAR driving 0@
  $RC_TRAIN == 1 // integer values
else_jump @TrainAnimStopping
if
   not $ROTATE_SPEED >= 10.0 // floating-point values
else_jump @TrainAnimRotate
$ROTATE_SPEED += 0.1 // floating-point values
jump @TrainAnimRotate

:TrainAnimStopping
if
  $ROTATE_SPEED > 0.0 // floating-point values
else_jump @TrainAnimRotate
$ROTATE_SPEED -= 0.01 // floating-point values
if
   not $ROTATE_SPEED >= 0.0 // floating-point values
else_jump @TrainAnimRotate
$ROTATE_SPEED = 0.0 // floating-point values

:TrainAnimRotate
0059: $SPIRAL += $ROTATE_SPEED // floating-point values
if
  $SPIRAL > 360.0 // floating-point values
else_jump @TrainAnimRotateMagnet
$SPIRAL -= 360.0 // floating-point values

:TrainAnimRotateMagnet
$ROTATE_SPEED *= 3.0 // floating-point values
005D: 15@ += $ROTATE_SPEED // floating-point values (never used in VC or GTA 3)
$ROTATE_SPEED /= 3.0 // floating-point values
if
  15@ > 360.0 // floating-point values
else_jump @TrainAnimRotatePiston
15@ -= 360.0 // floating-point values

:TrainAnimRotatePiston
$ROTATE_SPEED *= 0.8 // floating-point values
0059: $PISTON += $ROTATE_SPEED // floating-point values
$ROTATE_SPEED /= 0.8 // floating-point values
if
  $PISTON > 360.0 // floating-point values
else_jump @TrainAnimSetup
$PISTON -= 360.0 // floating-point values
jump @TrainAnimSetup

:TrainAnimEnd
gosub @TrainAnimDestroy
if
   Car.Wrecked(0@)
else_jump @TrainAnimBegin
end_thread

:TrainAnimDestroy
Object.Destroy($LEFTMAGNET)
Object.Destroy($RIGHTMAGNET)
Object.Destroy($SPIRALMODEL)
Object.Destroy($UPSPIRAL)
Object.Destroy($WINDMETER)
Object.Destroy($LEFTSIDEHAMMER)
Object.Destroy($RIGHTSIDEHAMMER)
Object.Destroy($BELLOWSBOTTOM)
Object.Destroy($BELLOWSMIDDLE1)
Object.Destroy($BELLOWSMIDDLE2)
Object.Destroy($BELLOWSTOP)
Object.Destroy($TOPGEAR)
Object.Destroy($PIVOT)
Object.Destroy($TOPROD)
Object.Destroy($LEFTSIDEAXLE)
Object.Destroy($RIGHTSIDEAXLE)
Object.Destroy($LEFTSIDECONNECTION)
Object.Destroy($RIGHTSIDECONNECTION)
Object.Destroy($LEFTSIDEMOVERCONNECTION)
Object.Destroy($RIGHTSIDEMOVERCONNECTION)
Object.Destroy($LEFTSIDEPISTONCONNECTION)
Object.Destroy($RIGHTSIDEPISTONCONNECTION)
Object.Destroy($LEFTSIDEAXLEMOVER)
Object.Destroy($RIGHTSIDEAXLEMOVER)
Object.Destroy($LEFTSIDEHORPISTON)
Object.Destroy($RIGHTSIDEHORPISTON)
Object.Destroy($PISTON1L)
Object.Destroy($PISTON2L)
Object.Destroy($PISTON3L)
Object.Destroy($PISTON4L)
Object.Destroy($PISTON5L)
Object.Destroy($PISTON6L)
Object.Destroy($PISTON1R)
Object.Destroy($PISTON2R)
Object.Destroy($PISTON3R)
Object.Destroy($PISTON4R)
Object.Destroy($PISTON5R)
Object.Destroy($PISTON6R)
return

:TrainPiston
0086: $X_PISTON = $TRIG_ANGLE // floating-point values only
$X_PISTON *= 0.986111 // floating-point values
0059: $X_PISTON += $PISTON_ANGLE_OFFSET // floating-point values
02F7: $Z_PISTON = sinus $X_PISTON // cosine swapped with sinus
02F6: $X_PISTON = cosine $X_PISTON // sinus swapped with cosine
$X_PISTON *= -0.09 // floating-point values
$Z_PISTON *= -0.09 // floating-point values
$X_PISTON += -0.747 // floating-point values
$Z_PISTON += 0.781 // floating-point values
0086: $PISTON_ROTATION = $TRIG_ANGLE // floating-point values only
$PISTON_ROTATION *= 0.9948377 // floating-point values
0059: $PISTON_ROTATION += $PISTON_ANGLE_OFFSET // floating-point values
02F6: $PISTON_ROTATION = cosine $PISTON_ROTATION // sinus swapped with cosine
$PISTON_ROTATION *= 0.27 // floating-point values
$PISTON_ROTATION *= 57.29578 // floating-point values
0086: $X_POS_TT = $X_PISTON // floating-point values only
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
return

:TrainPistonA
$X_PISTON *= -1.0 // floating-point values
$PISTON_ROTATION *= -1.0 // floating-point values
0086: $X_POS_TT = $X_PISTON // floating-point values only
0086: $Y_POS_TT = $Y_PISTON // floating-point values only
0086: $Z_POS_TT = $Z_PISTON // floating-point values only
gosub @TrainConversionOffset
return

:TrainWheel
thread 'WHEEL'

:TrainWheelBegin
wait 10
if
   not Car.Wrecked(0@)
else_jump @TrainWheelEnd
15@ = 0.0 // floating-point values
$LEFTFRONTWHEEL = Object.Create(#JVT_WHEELMOVE_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTFRONTWHEEL) = False
$LEFTMIDDLEWHEEL = Object.Create(#JVT_WHEELMOVE_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTMIDDLEWHEEL) = False
$LEFTBACKWHEEL = Object.Create(#JVT_WHEELMOVE_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTBACKWHEEL) = False
$RIGHTFRONTWHEEL = Object.Create(#JVT_WHEELMOVE_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTFRONTWHEEL) = False
$RIGHTMIDDLEWHEEL = Object.Create(#JVT_WHEELMOVE_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTMIDDLEWHEEL) = False
$RIGHTBACKWHEEL = Object.Create(#JVT_WHEELMOVE_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTBACKWHEEL) = False
$LEFTFRONTLEVER = Object.Create(#JVT_WHEELLEVER_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTFRONTLEVER) = False
$LEFTMIDDLELEVER = Object.Create(#JVT_WHEELLEVER_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTMIDDLELEVER) = False
$LEFTBACKLEVER = Object.Create(#JVT_WHEELLEVER_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTBACKLEVER) = False
$RIGHTFRONTLEVER = Object.Create(#JVT_WHEELLEVER_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTFRONTLEVER) = False
$RIGHTMIDDLELEVER = Object.Create(#JVT_WHEELLEVER_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTMIDDLELEVER) = False
$RIGHTBACKLEVER = Object.Create(#JVT_WHEELLEVER_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTBACKLEVER) = False
$LEFTWHEELROD = Object.Create(#JVT_WHEELROD_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTWHEELROD) = False
$RIGHTWHEELROD = Object.Create(#JVT_WHEELROD_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTWHEELROD) = False
$LEFTPISTONROD = Object.Create(#JVT_PISTONROD_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTPISTONROD) = False
$RIGHTPISTONROD = Object.Create(#JVT_PISTONROD_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTPISTONROD) = False
jump @TrainWheelStart

:TrainWheelSetup
wait 10
if
   not Car.Wrecked(0@)
else_jump @TrainWheelEnd

:TrainWheelStart
gosub @ObjectAngle
0063: 7@ -= 15@ // floating-point values (never used in VC or GTA 3)
4@ += 90.0 // floating-point values
$X_POS_TT = -0.914 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTFRONTWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTFRONTWHEEL set_rotation 8@ 7@ 4@
$X_POS_TT = -0.914 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTMIDDLEWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTMIDDLEWHEEL set_rotation 8@ 7@ 4@
$X_POS_TT = -0.914 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTBACKWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTBACKWHEEL set_rotation 8@ 7@ 4@
$X_POS_TT = -1.009 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTFRONTLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTFRONTLEVER set_rotation 8@ 7@ 4@
$X_POS_TT = -1.009 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTMIDDLELEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTMIDDLELEVER set_rotation 8@ 7@ 4@
$X_POS_TT = -1.009 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTBACKLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTBACKLEVER set_rotation 8@ 7@ 4@
005B: 7@ += 15@ // floating-point values (never used in VC or GTA 3)
005B: 7@ += 15@ // floating-point values (never used in VC or GTA 3)
8@ *= -1.0 // floating-point values (never used in VC or GTA 3)
4@ -= 180.0 // floating-point values
$X_POS_TT = 0.914 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTFRONTWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTFRONTWHEEL set_rotation 8@ 7@ 4@
$X_POS_TT = 0.914 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTMIDDLEWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTMIDDLEWHEEL set_rotation 8@ 7@ 4@
$X_POS_TT = 0.914 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTBACKWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTBACKWHEEL set_rotation 8@ 7@ 4@
$X_POS_TT = 1.009 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTFRONTLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTFRONTLEVER set_rotation 8@ 7@ 4@
$X_POS_TT = 1.009 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTMIDDLELEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTMIDDLELEVER set_rotation 8@ 7@ 4@
$X_POS_TT = 1.009 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.632 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTBACKLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTBACKLEVER set_rotation 8@ 7@ 4@
0063: 7@ -= 15@ // floating-point values (never used in VC or GTA 3)
8@ *= -1.0 // floating-point values (never used in VC or GTA 3)
4@ += 90.0 // floating-point values
02F7: 2@ = sinus 15@ // cosine swapped with sinus
2@ *= -0.372 // floating-point values (never used in VC or GTA 3)
2@ += 2.677 // floating-point values
02F6: 3@ = cosine 15@ // sinus swapped with cosine
3@ *= -0.372 // floating-point values (never used in VC or GTA 3)
3@ += -0.632 // floating-point values
1@ = -0.632 // floating-point values
0063: 1@ -= 3@ // floating-point values (never used in VC or GTA 3)
1@ *= 12.89155 // floating-point values (never used in VC or GTA 3)
$X_POS_TT = -1.148 // floating-point values
0088: $Y_POS_TT = 2@ // floating-point values only
0088: $Z_POS_TT = 3@ // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $LEFTWHEELROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTWHEELROD set_rotation 7@ 8@ 4@
01BC: put_object $LEFTPISTONROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
005B: 7@ += 1@ // floating-point values (never used in VC or GTA 3)
0453: object $LEFTPISTONROD set_rotation 7@ 8@ 4@
0063: 7@ -= 1@ // floating-point values (never used in VC or GTA 3)
$X_POS_TT = 1.148 // floating-point values
0088: $Y_POS_TT = 2@ // floating-point values only
0088: $Z_POS_TT = 3@ // floating-point values only
gosub @TrainConversionOffset
01BC: put_object $RIGHTWHEELROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTWHEELROD set_rotation 7@ 8@ 4@
01BC: put_object $RIGHTPISTONROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
005B: 7@ += 1@ // floating-point values (never used in VC or GTA 3)
0453: object $RIGHTPISTONROD set_rotation 7@ 8@ 4@
0063: 7@ -= 1@ // floating-point values (never used in VC or GTA 3)
0089: 12@ = $X_OFFSET_TT // floating-point values only
0069: 12@ *= $X_OFFSET_TT // floating-point values
0089: 13@ = $Y_OFFSET_TT // floating-point values only
0069: 13@ *= $Y_OFFSET_TT // floating-point values
0089: 14@ = $Z_OFFSET_TT // floating-point values only
0069: 14@ *= $Z_OFFSET_TT // floating-point values
005B: 12@ += 13@ // floating-point values (never used in VC or GTA 3)
005B: 12@ += 14@ // floating-point values (never used in VC or GTA 3)
01FB: 12@ = square_root 12@
12@ *= -30.0 // floating-point values (never used in VC or GTA 3)
if and
   not 4@ > 45.0 // floating-point values
   not $Y_OFFSET_TT > 0.0 // floating-point values
else_jump @TrainWheelA
12@ *= -1.0 // floating-point values (never used in VC or GTA 3)
jump @TrainWheelRotate

:TrainWheelA
if and
  4@ > 45.0 // floating-point values
   not 4@ > 135.0 // floating-point values
  $X_OFFSET_TT >= 0.0 // floating-point values
else_jump @TrainWheelB
12@ *= -1.0 // floating-point values (never used in VC or GTA 3)
jump @TrainWheelRotate

:TrainWheelB
if and
  4@ > 135.0 // floating-point values
   not 4@ > 225.0 // floating-point values
  $Y_OFFSET_TT >= 0.0 // floating-point values
else_jump @TrainWheelC
12@ *= -1.0 // floating-point values (never used in VC or GTA 3)
jump @TrainWheelRotate

:TrainWheelC
if and
  4@ > 225.0 // floating-point values
   not 4@ > 315.0 // floating-point values
   not $X_OFFSET_TT > 0.0 // floating-point values
else_jump @TrainWheelD
12@ *= -1.0 // floating-point values (never used in VC or GTA 3)
jump @TrainWheelRotate

:TrainWheelD
if and
  4@ > 315.0 // floating-point values
   not $Y_OFFSET_TT > 0.0 // floating-point values
else_jump @TrainWheelRotate
12@ *= -1.0 // floating-point values (never used in VC or GTA 3)
jump @TrainWheelRotate

:TrainWheelRotate
005B: 15@ += 12@ // floating-point values (never used in VC or GTA 3)

:TrainWheelResetRotation
if
  15@ > 180.0 // floating-point values
else_jump @TrainWheelSetup
15@ -= 360.0 // floating-point values
jump @TrainWheelResetRotation

:TrainWheelEnd
gosub @TrainWheelDestroy
if
   Car.Wrecked(0@)
else_jump @TrainWheelBegin
end_thread

:TrainWheelDestroy
Object.Destroy($LEFTFRONTWHEEL)
Object.Destroy($LEFTMIDDLEWHEEL)
Object.Destroy($LEFTBACKWHEEL)
Object.Destroy($RIGHTFRONTWHEEL)
Object.Destroy($RIGHTMIDDLEWHEEL)
Object.Destroy($RIGHTBACKWHEEL)
Object.Destroy($LEFTFRONTLEVER)
Object.Destroy($LEFTMIDDLELEVER)
Object.Destroy($LEFTBACKLEVER)
Object.Destroy($RIGHTFRONTLEVER)
Object.Destroy($RIGHTMIDDLELEVER)
Object.Destroy($RIGHTBACKLEVER)
Object.Destroy($LEFTWHEELROD)
Object.Destroy($RIGHTWHEELROD)
Object.Destroy($LEFTPISTONROD)
Object.Destroy($RIGHTPISTONROD)
return

:TrainHoverWheel
thread 'H_WHEEL'

:TrainHoverWheelBegin
wait 10
if
   not Car.Wrecked(0@)
else_jump @TrainHoverWheelDestroy
15@ = 0.0 // floating-point values
$LEFTFRONTWHEEL = Object.Create(#FJVT_WHEELMOVE, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTFRONTWHEEL) = False
$LEFTMIDDLEWHEEL = Object.Create(#FJVT_WHEELMOVE, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTMIDDLEWHEEL) = False
$LEFTBACKWHEEL = Object.Create(#FJVT_WHEELMOVE, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTBACKWHEEL) = False
$RIGHTFRONTWHEEL = Object.Create(#FJVT_WHEELMOVE, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTFRONTWHEEL) = False
$RIGHTMIDDLEWHEEL = Object.Create(#FJVT_WHEELMOVE, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTMIDDLEWHEEL) = False
$RIGHTBACKWHEEL = Object.Create(#FJVT_WHEELMOVE, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTBACKWHEEL) = False
$LEFTFRONTLEVER = Object.Create(#FJVT_WHEELLEVER, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTFRONTLEVER) = False
$LEFTMIDDLELEVER = Object.Create(#FJVT_WHEELLEVER, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTMIDDLELEVER) = False
$LEFTBACKLEVER = Object.Create(#FJVT_WHEELLEVER, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTBACKLEVER) = False
$RIGHTFRONTLEVER = Object.Create(#FJVT_WHEELLEVER, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTFRONTLEVER) = False
$RIGHTMIDDLELEVER = Object.Create(#FJVT_WHEELLEVER, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTMIDDLELEVER) = False
$RIGHTBACKLEVER = Object.Create(#FJVT_WHEELLEVER, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTBACKLEVER) = False
$LEFTWHEELROD = Object.Create(#FJVT_WHEELROD, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTWHEELROD) = False
$RIGHTWHEELROD = Object.Create(#FJVT_WHEELROD, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTWHEELROD) = False
$LEFTPISTONROD = Object.Create(#FJVT_PISTONROD_L, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($LEFTPISTONROD) = False
$RIGHTPISTONROD = Object.Create(#FJVT_PISTONROD_R, 0.0, 0.0, 1000.0)
Object.ToggleInMovingList($RIGHTPISTONROD) = False
jump @TrainHoverWheelStart

:TrainHoverWheelSetup
wait 10
if
   not Car.Wrecked(0@)
else_jump @TrainHoverWheelDestroy

:TrainHoverWheelStart
15@ *= -1.0 // floating-point values (never used in VC or GTA 3)
0088: $Z_ADJUST = 15@ // floating-point values only
gosub @RotateAngle
005B: 4@ += 15@ // floating-point values (never used in VC or GTA 3)
$X_POS_TT = -1.112 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.777 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTFRONTWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTFRONTWHEEL set_rotation 7@ 8@ 4@
$X_POS_TT = -1.112 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.777 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTMIDDLEWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTMIDDLEWHEEL set_rotation 7@ 8@ 4@
$X_POS_TT = -1.112 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.777 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTBACKWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTBACKWHEEL set_rotation 7@ 8@ 4@
$X_POS_TT = -1.009 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.872 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTFRONTLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTFRONTLEVER set_rotation 7@ 8@ 4@
$X_POS_TT = -1.009 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.872 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTMIDDLELEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTMIDDLELEVER set_rotation 7@ 8@ 4@
$X_POS_TT = -1.009 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.872 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTBACKLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTBACKLEVER set_rotation 7@ 8@ 4@
0063: 4@ -= 15@ // floating-point values (never used in VC or GTA 3)
15@ *= -1.0 // floating-point values (never used in VC or GTA 3)
0088: $Z_ADJUST = 15@ // floating-point values only
gosub @RotateAngle
005B: 4@ += 15@ // floating-point values (never used in VC or GTA 3)
$X_POS_TT = 1.112 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.777 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTFRONTWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTFRONTWHEEL set_rotation 7@ 8@ 4@
$X_POS_TT = 1.112 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.777 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTMIDDLEWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTMIDDLEWHEEL set_rotation 7@ 8@ 4@
$X_POS_TT = 1.112 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.777 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTBACKWHEEL at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTBACKWHEEL set_rotation 7@ 8@ 4@
$X_POS_TT = 1.009 // floating-point values
$Y_POS_TT = 4.134 // floating-point values
$Z_POS_TT = -0.872 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTFRONTLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTFRONTLEVER set_rotation 7@ 8@ 4@
$X_POS_TT = 1.009 // floating-point values
$Y_POS_TT = 2.677 // floating-point values
$Z_POS_TT = -0.872 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTMIDDLELEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTMIDDLELEVER set_rotation 7@ 8@ 4@
$X_POS_TT = 1.009 // floating-point values
$Y_POS_TT = -0.068 // floating-point values
$Z_POS_TT = -0.872 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTBACKLEVER at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTBACKLEVER set_rotation 7@ 8@ 4@
0063: 4@ -= 15@ // floating-point values (never used in VC or GTA 3)
$Z_ADJUST = 0.0 // floating-point values
gosub @RotateAngle
02F6: 11@ = cosine 15@ // sinus swapped with cosine
11@ *= -0.372 // floating-point values (never used in VC or GTA 3)
11@ += -1.112 // floating-point values
02F7: 12@ = sinus 15@ // cosine swapped with sinus
12@ *= -0.372 // floating-point values (never used in VC or GTA 3)
12@ += 2.677 // floating-point values
0087: 13@ = 11@ // floating-point values only
13@ += 1.112 // floating-point values
13@ *= 12.89155 // floating-point values (never used in VC or GTA 3)
0088: $X_POS_TT = 11@ // floating-point values only
0088: $Y_POS_TT = 12@ // floating-point values only
$Z_POS_TT = -1.011 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $LEFTWHEELROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTWHEELROD set_rotation 7@ 8@ 4@
0088: $Z_ADJUST = 13@ // floating-point values only
gosub @RotateAngle
005B: 4@ += 13@ // floating-point values (never used in VC or GTA 3)
01BC: put_object $LEFTPISTONROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $LEFTPISTONROD set_rotation 7@ 8@ 4@
0063: 4@ -= 13@ // floating-point values (never used in VC or GTA 3)
11@ *= -1.0 // floating-point values (never used in VC or GTA 3)
13@ *= -1.0 // floating-point values (never used in VC or GTA 3)
$Z_ADJUST = 0.0 // floating-point values
gosub @RotateAngle
0088: $X_POS_TT = 11@ // floating-point values only
0088: $Y_POS_TT = 12@ // floating-point values only
$Z_POS_TT = -1.011 // floating-point values
gosub @TrainConversionOffset
01BC: put_object $RIGHTWHEELROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTWHEELROD set_rotation 7@ 8@ 4@
0088: $Z_ADJUST = 13@ // floating-point values only
gosub @RotateAngle
005B: 4@ += 13@ // floating-point values (never used in VC or GTA 3)
01BC: put_object $RIGHTPISTONROD at $X_POS_TT $Y_POS_TT $Z_POS_TT
0453: object $RIGHTPISTONROD set_rotation 7@ 8@ 4@
0063: 4@ -= 13@ // floating-point values (never used in VC or GTA 3)
0089: 12@ = $X_OFFSET_TT // floating-point values only
0069: 12@ *= $X_OFFSET_TT // floating-point values
0089: 13@ = $Y_OFFSET_TT // floating-point values only
0069: 13@ *= $Y_OFFSET_TT // floating-point values
0089: 14@ = $Z_OFFSET_TT // floating-point values only
0069: 14@ *= $Z_OFFSET_TT // floating-point values
005B: 12@ += 13@ // floating-point values (never used in VC or GTA 3)
005B: 12@ += 14@ // floating-point values (never used in VC or GTA 3)
01FB: 12@ = square_root 12@
12@ *= 10.0 // floating-point values (never used in VC or GTA 3)
15@ += 5.0 // floating-point values
005B: 15@ += 12@ // floating-point values (never used in VC or GTA 3)

:TrainHoverRotate
if
  15@ > 180.0 // floating-point values
else_jump @TrainHoverWheelSetup
15@ -= 360.0 // floating-point values
jump @TrainHoverRotate

:TrainHoverWheelDestroy
gosub @TrainWheelDestroy
if
   Car.Wrecked(0@)
else_jump @TrainHoverWheelBegin
end_thread

:RotateAngle
02F6: $ANGLE_ADJUST_X = cosine $Z_ADJUST // sinus swapped with cosine
$ANGLE_ADJUST_X *= -5.0 // floating-point values
02F7: $ANGLE_ADJUST_Y = sinus $Z_ADJUST // cosine swapped with sinus
$ANGLE_ADJUST_Y *= 5.0 // floating-point values
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 0.0
0407: create_coordinate 1@ 2@ 7@ from_car 0@ offset $ANGLE_ADJUST_X $ANGLE_ADJUST_Y 0.0
0063: 7@ -= 3@ // floating-point values (never used in VC or GTA 3)
7@ /= 5.0 // floating-point values (never used in VC or GTA 3)
7@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 3@ = float_to_integer 7@
7@ = -90.1 // floating-point values

:RotateAngleX
7@ += 0.1 // floating-point values
02F6: 1@ = cosine 7@ // sinus swapped with cosine
1@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 1@ = float_to_integer 1@
if
003B:   1@ == 3@ // integer values (never used VC or GTA 3)
else_jump @RotateAngleX
02F7: $ANGLE_ADJUST_X = sinus $Z_ADJUST // cosine swapped with sinus
$ANGLE_ADJUST_X *= -5.0 // floating-point values
02F6: $ANGLE_ADJUST_Y = cosine $Z_ADJUST // sinus swapped with cosine
$ANGLE_ADJUST_Y *= -5.0 // floating-point values
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 0.0
0407: create_coordinate 1@ 2@ 8@ from_car 0@ offset $ANGLE_ADJUST_X $ANGLE_ADJUST_Y 0.0
0063: 8@ -= 3@ // floating-point values (never used in VC or GTA 3)
8@ /= 5.0 // floating-point values (never used in VC or GTA 3)
8@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 3@ = float_to_integer 8@
8@ = -90.1 // floating-point values

:RotateAngleY
8@ += 0.1 // floating-point values
02F6: 1@ = cosine 8@ // sinus swapped with cosine
1@ *= 100.0 // floating-point values (never used in VC or GTA 3)
008C: 1@ = float_to_integer 1@
if
003B:   1@ == 3@ // integer values (never used VC or GTA 3)
else_jump @RotateAngleY
4@ = Car.Angle(0@)
return

:TrainRecreate
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 -1.35
4@ = Car.Angle(0@)
02E3: 5@ = car 0@ speed
6@ = Car.Health(0@)
Car.Destroy(0@)
0@ = Car.Create(10@, 1@, 2@, 3@)
Car.Angle(0@) = 4@
04BA: set_car 0@ speed_instantly 5@
Car.Health(0@) = 6@
008A: $TRAIN = 0@ // integer values and handles
9@ = 0.0 // floating-point values
10@ = 0.0 // floating-point values
create_thread @TrainConversion 0@
create_thread @TrainAnim 0@
if
   Car.Model(0@) == #BUS
jf @FlyingTrainRecreate
create_thread @TrainWheel 0@
return

:FlyingTrainRecreate
create_thread @TrainHoverWheel 0@
return

:Door
thread 'DOOR'

:DoorStart
wait 10
if
   Player.Defined($PLAYER_CHAR)
jf @DoorStart
if
   not Car.Wrecked(0@)
jf @DoorEnd
020A: set_car 0@ door_status_to 2
if and
80E0:   not player $PLAYER_CHAR driving
01FC:   player $PLAYER_CHAR near_car 0@ radius 25.0 25.0 0
  $DOOR_CONTROL == 1 // integer values
003A:   $KEY == $KEY_TIMETRAIN // T
jf @TrainShutdown
14@ = 1 // integer values
jump @DoorLoadModel

:TrainShutdown
if and
00DC:   player $PLAYER_CHAR driving 0@
  $DOOR_CONTROL == 1 // integer values
00E1:   key_pressed 0 15
jf @DoorStart
14@ = 2 // integer values
040D: unload_wav 2
03CF: load_wav 'ASS_6' as 2

:TrainShutdownPlaySound
wait 10
if
03D0:   wav 2 loaded
jf @TrainShutdownPlaySound
03D1: play_wav 2

:DoorLoadModel
16@ = 0 // integer values
020A: set_car 0@ door_status_to 0
Model.Load(#OBJETO1)
Model.Load(#OBJETO2)

:DoorCreateModel
wait 10
if and
   Model.Available(#OBJETO1)
   Model.Available(#OBJETO2)
jf @DoorCreateModel
10@ = Car.Model(0@)
0506: vehicle_model 10@ set_next_variation -1 -1
if
00DC:   player $PLAYER_CHAR driving 0@
jf @DoorRecreateTrain
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 100.0
012A: put_player $PLAYER_CHAR at 1@ 2@ 3@ and_remove_from_car
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 -5.0 0.0
Camera.SetPosition(1@, 2@, 3@, 0.0, 0.0, 0.0)
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 -1.35
0460: set_camera_pointing_time 0.0 100
Camera.PointAt(1@, 2@, 3@, 1)
gosub @TrainRecreate
wait 0
0369: put_player $PLAYER_CHAR in_car 0@
Camera.Restore
Camera.SetBehindPlayer
jump @DoorPlaceModel

:DoorRecreateTrain
gosub @TrainRecreate

:DoorPlaceModel
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset -1.185 -0.104 0.045
12@ = Object.Create(#OBJETO1, 1@, 2@, 1000.0)
Object.ToggleInMovingList(12@) = False
//Object.CollisionDetection(12@) = False
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset -0.28 -0.104 2.565
13@ = Object.Create(#OBJETO2, 1@, 2@, 1000.0)
Object.ToggleInMovingList(13@) = False
//Object.CollisionDetection(13@) = False
035C: place_object 12@ relative_to_car 0@ offset -1.185 -0.104 0.045
035C: place_object 13@ relative_to_car 0@ offset -0.26 -0.104 2.565

:DoorLoadSound
040D: unload_wav 1
03CF: load_wav 'ASS_2' as 1

:DoorPlaySound
wait 0
if
03D0:   wav 1 loaded
jf @DoorPlaySound
$DOOR_SOUND = 1 // integer values
03D1: play_wav 1

:DoorAnimate
wait 10
if
   not Car.Wrecked(0@)
jf @DoorEnd
gosub @ObjectAngle
005B: 8@ += 9@ // floating-point values (never used in VC or GTA 3)
035C: place_object 12@ relative_to_car 0@ offset -1.185 -0.104 0.045
0453: object 12@ set_rotation 7@ 8@ 4@
0063: 8@ -= 9@ // floating-point values (never used in VC or GTA 3)
005B: 8@ += 10@ // floating-point values (never used in VC or GTA 3)
035C: place_object 13@ relative_to_car 0@ offset -0.26 -0.104 2.565
0453: object 13@ set_rotation 7@ 8@ 4@
if or
  14@ == 1 // integer values
  14@ == 2 // integer values
jf @DoorOpen
if
   not 10@ >= 60.0 // floating-point values (never used in VC or GTA 3)
jf @DoorUnloadSound
9@ -= 3.24 // floating-point values
10@ += 1.2 // floating-point values
jump @DoorKeyWait

:DoorOpen
if
  14@ == 0 // integer values
jf @DoorAnimate
if
  10@ > 0.0 // floating-point values
jf @DoorRemoveModel
9@ += 3.24 // floating-point values
10@ -= 1.2 // floating-point values
jump @DoorKeyWait

:DoorUnloadSound
if
  $DOOR_SOUND == 1 // integer values
jf @DoorKeyWait
$DOOR_SOUND = 0 // integer values
040D: unload_wav 1

:DoorKeyWait
if
  14@ == 1 // integer values
jf @DoorClose
if and
  16@ >= 500 // integer values
003A:   $KEY == $KEY_TIMETRAIN // T
jf @DoorOpenLoadSound
14@ = 0 // integer values
jump @DoorLoadSound

:DoorOpenLoadSound
if
00DC:   player $PLAYER_CHAR driving 0@
jf @DoorAnimate
14@ = 0 // integer values
040D: unload_wav 2
03CF: load_wav 'ASS_5' as 2

:DoorOpenPlaySound
wait 10
if
03D0:   wav 2 loaded
jf @DoorOpenPlaySound
03D1: play_wav 2
jump @DoorLoadSound

:DoorClose
if
  14@ == 2 // integer values
jf @DoorAnimate
02D4: car 0@ turn_off_engine
if
80DC:   not player $PLAYER_CHAR driving 0@
jf @DoorAnimate
14@ = 1 // integer values
jump @DoorAnimate

:DoorRemoveModel
$DOOR_SOUND = 0 // integer values
040D: unload_wav 1
Object.Destroy(12@)
Object.Destroy(13@)
if
80DC:   not player $PLAYER_CHAR driving 0@
jf @DoorReset
10@ = Car.Model(0@)
0506: vehicle_model 10@ set_next_variation -1 0
gosub @TrainRecreate
jump @DoorStart

:DoorReset
10@ = Car.Model(0@)
0506: vehicle_model 10@ set_next_variation -1 0
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 100.0
012A: put_player $PLAYER_CHAR at 1@ 2@ 3@ and_remove_from_car
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 -5.0 0.0
Camera.SetPosition(1@, 2@, 3@, 0.0, 0.0, 0.0)
0407: create_coordinate 1@ 2@ 3@ from_car 0@ offset 0.0 0.0 -1.35
0460: set_camera_pointing_time 0.0 100
Camera.PointAt(1@, 2@, 3@, 1)
gosub @TrainRecreate
wait 0
0369: put_player $PLAYER_CHAR in_car 0@
Camera.Restore
Camera.SetBehindPlayer
jump @DoorStart

:DoorEnd
Object.Destroy(12@)
Object.Destroy(13@)
end_thread